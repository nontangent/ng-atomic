{
    "pipes": [],
    "interfaces": [
        {
            "name": "DOMRectReadOnly",
            "id": "interface-DOMRectReadOnly-24aa4ce9389ba12af8ee1692819bbe3f44c44f03f4cd441e2955142b5928467456fd3e96ad583c0ae72af4b65dc56ef56c24003a36ce748cf8756a6376b62a3d",
            "file": "libs/components/frames/line-up/resize-observer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport interface DOMRectReadOnly {\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n  readonly top: number;\n  readonly right: number;\n  readonly bottom: number;\n  readonly left: number;\n}\n\nexport interface ResizeObserverEntry {\n  readonly target: Element;\n  readonly contentRect: DOMRectReadOnly;\n}\n\nexport function fromResize(...elements: Element[]): Observable<ResizeObserverEntry> {\n  return Observable.create(function(observer: any) {\n\n    const resizeObserver = new ResizeObserver((observerEntries: any) => {\n      for (const entry of observerEntries) {\n        observer.next(entry);\n      }\n    });\n\n    for (const el of elements) {\n      resizeObserver.observe(el);\n    }\n\n    // cancel resize observer on cancelation\n    return () => resizeObserver.disconnect();\n  }).pipe(\n   startWith({\n     x: 0,\n     y: 0,\n     width: 0,\n     height: 0,\n     top: 0,\n     right: 0,\n     bottom: 0,\n     left: 0,\n   }) \n  );\n}\n",
            "properties": [
                {
                    "name": "bottom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "right",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "top",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Option",
            "id": "interface-Option-983be321a78aa94e988555f1ee59d8e575a19b555890fd502e9ad1d9e21eb338e3b5e1077d65489f52bb85e5d9e648c67729183bba3ace2e6317c5d2d0ee8097",
            "file": "libs/components/molecules/select-input-field/select-input-field.molecule.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl } from '@ngneat/reactive-forms';\n\ninterface Option<T> {\n  name: string;\n  value: T;\n}\n\n@Component({\n  selector: 'molecules-select-input-field',\n  templateUrl: './select-input-field.molecule.html',\n  styleUrls: ['./select-input-field.molecule.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {class: 'molecule input-field'},\n})\nexport class SelectInputFieldMolecule<T> {\n\n  @Input()\n  label: string = '';\n\n  @Input()\n  control = new FormControl<T>();\n\n  @Input()\n  options: Option<T>[] = [];\n\n  value = (item: Option<T>) => item?.value; \n\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResizeObserverEntry",
            "id": "interface-ResizeObserverEntry-24aa4ce9389ba12af8ee1692819bbe3f44c44f03f4cd441e2955142b5928467456fd3e96ad583c0ae72af4b65dc56ef56c24003a36ce748cf8756a6376b62a3d",
            "file": "libs/components/frames/line-up/resize-observer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport interface DOMRectReadOnly {\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n  readonly top: number;\n  readonly right: number;\n  readonly bottom: number;\n  readonly left: number;\n}\n\nexport interface ResizeObserverEntry {\n  readonly target: Element;\n  readonly contentRect: DOMRectReadOnly;\n}\n\nexport function fromResize(...elements: Element[]): Observable<ResizeObserverEntry> {\n  return Observable.create(function(observer: any) {\n\n    const resizeObserver = new ResizeObserver((observerEntries: any) => {\n      for (const entry of observerEntries) {\n        observer.next(entry);\n      }\n    });\n\n    for (const el of elements) {\n      resizeObserver.observe(el);\n    }\n\n    // cancel resize observer on cancelation\n    return () => resizeObserver.disconnect();\n  }).pipe(\n   startWith({\n     x: 0,\n     y: 0,\n     width: 0,\n     height: 0,\n     top: 0,\n     right: 0,\n     bottom: 0,\n     left: 0,\n   }) \n  );\n}\n",
            "properties": [
                {
                    "name": "contentRect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DOMRectReadOnly",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Element",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "LineUpService",
            "id": "injectable-LineUpService-a26b6a694fdf1ac4a92091b922ce63555ca73b323a8ed40467e65119ddcd00e9a0640bbed35ee31ba2e8bd8930ce73da9eb6953d0bf02d7ac9395eed1433e07e",
            "file": "libs/components/frames/line-up/line-up.frame.ts",
            "properties": [
                {
                    "name": "pageAnimationDone$",
                    "defaultValue": "new ReplaySubject(1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, Injectable, Input, ViewChild } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { LINE_UP_ANIMATIONS } from './line-up.animations';\nimport { fromResize } from './resize-observer';\n\nconst _fromResize = (el: ElementRef) => fromResize(el.nativeElement)\n  .pipe(map(({contentRect}: {contentRect: {width: number}}) => contentRect?.width ?? 0))\n  .pipe(distinctUntilChanged());\n\n@Injectable({providedIn: 'root'})\nclass LineUpService {\n  pageAnimationDone$ = new ReplaySubject(1);\n}\n\n@Component({\n  selector: 'frames-line-up',\n  templateUrl: './line-up.frame.html',\n  styleUrls: ['./line-up.frame.scss'],\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: LINE_UP_ANIMATIONS,\n})\nexport class LineUpFrame {\n  @HostBinding('attr.is-main-hidden')\n  isMainHidden = false;\n\n  @Input()\n  label = 'root';\n\n  @Input()\n  outlet?: RouterOutlet;\n\n  @Input()\n  minNextWidth: number = 360;\n\n  @ViewChild('next', {static: true})\n  next!: ElementRef;\n\n  get page(): string {\n    const page: string = this.outlet?.activatedRouteData?.page;\n    return page === 'Blank' ? 'Blank' : this.isMainHidden ? `Next` : `NextWithMainPage`;\n  }\n\n  constructor(\n    public service: LineUpService,\n    private cd: ChangeDetectorRef,\n  ) { }\n\n  ngOnInit(): void {\n    if (this.label === 'root') return; \n\n    _fromResize(this.next).subscribe((width: number) => {\n      this.isMainHidden = width > this.minNextWidth;\n      this.cd.detectChanges();\n    });\n  }\n}\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ActionButtonsSectionOrganism",
            "id": "component-ActionButtonsSectionOrganism-f73dc5962876925fe71073ebea47d93f1738e83c846883758b1b04427b78ff3e0260609a4d99c62248c1649d72a22dc7fad73c8bd1873698c9aa7c1d74572870",
            "file": "libs/components/organisms/action-buttons-section/action-buttons-section.organism.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-action-buttons-section",
            "styleUrls": [
                "./action-buttons-section.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./action-buttons-section.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ActionItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionItemClick",
                    "defaultValue": "new EventEmitter<[ActionItem]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ActionItem } from '@ng-atomic/common/models';\n\n@Component({\n  selector: 'organisms-action-buttons-section',\n  templateUrl: './action-buttons-section.organism.html',\n  styleUrls: ['./action-buttons-section.organism.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {class: 'organism section'},\n})\nexport class ActionButtonsSectionOrganism {\n  @Input()\n  actionItems: ActionItem[] = [];\n\n  @Output()\n  actionItemClick = new EventEmitter<[ActionItem]>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'action-buttons-section');\n\n:host {\n  @include property(--horizontal-padding, 16px);\n}\n\n:host {\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n\n  width: 100%;\n\n  padding: 0 var(--horizontal-padding);\n  box-sizing: border-box;\n\n  button {\n    width: 100%;\n    height: 48px;\n  }\n}",
                    "styleUrl": "./action-buttons-section.organism.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-container *ngFor=\"let item of actionItems\">\n  <button mat-raised-button color=\"primary\" (click)=\"actionItemClick.emit([item])\">{{ item?.name }}</button>\n</ng-container>"
        },
        {
            "name": "ActionsColumnMolecule",
            "id": "component-ActionsColumnMolecule-287b2c7cc2d26605932787251af1b3e4e0a817dbf0a7195a92024257f2eb934b9429bb377d6d12c6283b09902a193d04753ee70db9c4915a4a72d617bebd9943",
            "file": "libs/components/molecules/actions-column/actions-column.molecule.ts",
            "changeDetection": "ChangeDetectionStrategy.Default",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "molecules-actions-column",
            "styleUrls": [
                "./actions-column.molecule.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./actions-column.molecule.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ActionItem[]",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionItemClick",
                    "defaultValue": "new EventEmitter<[ActionItem, T]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "cell",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkCellDef",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CdkCellDef, {static: true}"
                        }
                    ]
                },
                {
                    "name": "columnDef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkColumnDef",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CdkColumnDef, {static: true}"
                        }
                    ]
                },
                {
                    "name": "headerCell",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkHeaderCellDef",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CdkHeaderCellDef, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_syncColumnDefName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CdkCellDef, CdkColumnDef, CdkHeaderCellDef, CdkTable, TextColumnOptions, TEXT_COLUMN_OPTIONS } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ActionItem } from '@ng-atomic/common/models';\n\n@Component({\n  selector: 'molecules-actions-column',\n  templateUrl: './actions-column.molecule.html',\n  styleUrls: ['./actions-column.molecule.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class ActionsColumnMolecule<T> {\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._name = name;\n    this._syncColumnDefName();\n  }\n  _name!: string;\n\n  @Input()\n  actionItems: ActionItem[] = [];\n\n\n  @Output()\n  actionItemClick = new EventEmitter<[ActionItem, T]>();\n\n  @ViewChild(CdkColumnDef, {static: true})\n  columnDef!: CdkColumnDef;\n  \n  @ViewChild(CdkCellDef, {static: true})\n  cell!: CdkCellDef;\n\n  @ViewChild(CdkHeaderCellDef, {static: true})\n  headerCell!: CdkHeaderCellDef;\n\n  constructor(\n    @Optional() private _table: CdkTable<T>,\n    @Optional() @Inject(TEXT_COLUMN_OPTIONS) private _options: TextColumnOptions<T>,\n  ) {\n    this._options ??= {};\n  }\n\n  ngOnInit() {\n    this._syncColumnDefName();\n\n    if (this._table) {\n      this.columnDef.cell = this.cell;\n      this.columnDef.headerCell = this.headerCell;\n      this._table.addColumnDef(this.columnDef);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._table) {\n      this._table.removeColumnDef(this.columnDef);\n    }\n  }\n\n  private _syncColumnDefName() {\n    if (this.columnDef) {\n      this.columnDef.name = this.name;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./actions-column.molecule.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_table",
                        "type": "CdkTable<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_options",
                        "type": "TextColumnOptions<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "_table",
                        "type": "CdkTable<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_options",
                        "type": "TextColumnOptions<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "name": {
                    "name": "name",
                    "setSignature": {
                        "name": "name",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "name",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 17,
                        "jsdoctags": [
                            {
                                "name": "name",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "name",
                        "type": "string",
                        "returnType": "string",
                        "line": 14
                    }
                }
            },
            "templateData": "<ng-container matColumnDef>\n  <th mat-header-cell *matHeaderCellDef>操作</th>\n  <td mat-cell *matCellDef=\"let item\">\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" *ngIf=\"actionItems?.length\"><mat-icon>menu</mat-icon></button>\n    <mat-menu #menu=\"matMenu\">\n      <button *ngFor=\"let actionItem of actionItems\" mat-menu-item (click)=\"actionItemClick.emit([actionItem, item])\">\n        {{ actionItem?.name }}\n      </button>\n    </mat-menu>\n  </td>\n</ng-container>\n"
        },
        {
            "name": "AutoLayoutFrame",
            "id": "component-AutoLayoutFrame-52d7bc3c55f6f5f542c6759d9a6d17987e9eb4da02b8577fbff1a608cab1b5f8b5c0aae67fdfe5d1100fe3de16dfeea153f158dab2815b837c57fb848f3a3e40",
            "file": "libs/components/frames/auto-layout/auto-layout.frame.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "frames-auto-layout",
            "styleUrls": [
                "./auto-layout.frame.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./auto-layout.frame.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'frames-auto-layout',\n  templateUrl: './auto-layout.frame.html',\n  styleUrls: ['./auto-layout.frame.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AutoLayoutFrame { }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'auto-layout');\n\n:host {\n  @include property(--gap, 24px);\n  @include property(--vertical-padding, 24px);\n}\n\n:host {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  \n  justify-content: center;\n  gap: var(--gap);\n\n  box-sizing: border-box;\n  padding: var(--vertical-padding) 0;\n\n  &[horizontal] {\n    flex-direction: row;\n  }\n\n  &[vertical] {\n    flex-direction: column;\n  }\n}\n",
                    "styleUrl": "./auto-layout.frame.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>"
        },
        {
            "name": "BackNavigatorOrganism",
            "id": "component-BackNavigatorOrganism-5b365f2846b3d03b923d44b2a9803698baece0f4f512236c10006402fa8fe1cd7f2ebb15196d9e4e7fc369f354c294cae52de3e0e76fa63f20095b6db68d91d5",
            "file": "libs/components/organisms/back-navigator/back-navigator.organism.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-back-navigator",
            "styleUrls": [
                "./back-navigator.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./back-navigator.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "ActionItem[]",
                    "decorators": []
                },
                {
                    "name": "canBack",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionItemClick",
                    "defaultValue": "new EventEmitter<ActionItemEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                },
                {
                    "name": "backButtonClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ActionItem, ActionItemEvent } from '@ng-atomic/common/models';\n\n@Component({\n  selector: 'organisms-back-navigator',\n  templateUrl: './back-navigator.organism.html',\n  styleUrls: ['./back-navigator.organism.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BackNavigatorOrganism {\n\n  @Input()\n  canBack = true;\n\n  @Input()\n  title?: string;\n\n  @Input()\n  actionItems: ActionItem[] = [];\n\n  @Output()\n  backButtonClick = new EventEmitter<void>();\n\n  @Output()\n  actionItemClick = new EventEmitter<ActionItemEvent>();\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var' as * with ($host: 'back-navigator');\n\n:host {\n  @include property(--height, 64px);\n}\n\n:host {\n  display: block;\n  width: 100%;\n  height: var(--height);\n\n  mat-toolbar {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    justify-content: space-between;\n    align-items: center;\n  }\n  \n  div {\n    display: flex;\n    align-items: center;\n  }\n}",
                    "styleUrl": "./back-navigator.organism.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-toolbar color=\"primary\">\n  <div>\n    <button mat-icon-button *ngIf=\"canBack\" (click)=\"backButtonClick.emit()\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n    <span class=\"title-container\">\n      {{ title || '' }}\n    </span>\n  </div>\n\n  <div>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" *ngIf=\"actionItems.length\">\n      <mat-icon>menu</mat-icon>\n    </button>\n  </div>\n</mat-toolbar>\n\n<mat-menu #menu=\"matMenu\">\n  <button \n    *ngFor=\"let actionItem of actionItems\"\n    mat-menu-item \n    (click)=\"actionItemClick.emit([actionItem])\"\n  >{{ actionItem.name }}</button>\n</mat-menu>"
        },
        {
            "name": "BlankPage",
            "id": "component-BlankPage-69fffc8762e2363a8bb0c1e15bac9ceefddd6c1090da04ef9d5624a399a5fd907fe9434c2d5e1cfa81e9c956d0e7499a458bc74a6ffdcc868fe9c2dba9e4d7d1",
            "file": "libs/components/pages/blank/blank.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pages-blank",
            "styleUrls": [],
            "styles": [
                ":host { display: none }"
            ],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pages-blank',\n  template:'',\n  styles: [':host { display: none }'],\n})\nexport class BlankPage { }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ":host { display: none }\n"
        },
        {
            "name": "CardFrame",
            "id": "component-CardFrame-7ecd676ed4bc75cdb149f41a3ae036559cab715bf64c94f105e1ea8119bb14d3786f3174da2ae6c596fd4091cc084a4ea05fb0f4dd56abffb18c6acb64f6e2a6",
            "file": "libs/components/frames/card/card.frame.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "frames-card",
            "styleUrls": [
                "./card.frame.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.frame.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'frames-card',\n  templateUrl: './card.frame.html',\n  styleUrls: ['./card.frame.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardFrame { }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: block;\n\n  mat-card {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n  }\n}",
                    "styleUrl": "./card.frame.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card><ng-content></ng-content></mat-card>"
        },
        {
            "name": "CheckboxColumnMolecule",
            "id": "component-CheckboxColumnMolecule-77fbadaeb1d7e03e1193f54191dee0e51e6c8a52fa01f21dca28c640c5c9b2e2c3fe27806895f098a6c843ea3a298cbfa8b4f83b025517a5de0e1b2a61b30991",
            "file": "libs/components/molecules/checkbox-column/checkbox-column.molecule.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "molecules-checkbox-column",
            "styleUrls": [
                "./checkbox-column.molecule.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-column.molecule.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectedIdSet",
                    "defaultValue": "new Set<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkboxClick",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "cell",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkCellDef",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CdkCellDef, {static: true}"
                        }
                    ]
                },
                {
                    "name": "columnDef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkColumnDef",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CdkColumnDef, {static: true}"
                        }
                    ]
                },
                {
                    "name": "headerCell",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkHeaderCellDef",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CdkHeaderCellDef, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_syncColumnDefName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CdkCellDef, CdkColumnDef, CdkHeaderCellDef, CdkTable } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'molecules-checkbox-column',\n  templateUrl: './checkbox-column.molecule.html',\n  styleUrls: ['./checkbox-column.molecule.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboxColumnMolecule<T> implements OnInit {\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._name = name;\n    this._syncColumnDefName();\n  }\n  _name!: string;\n\n  @Input()\n  selectedIdSet = new Set<string>();\n\n  @Output()\n  checkboxClick = new EventEmitter<T>();\n\n  @ViewChild(CdkColumnDef, {static: true})\n  columnDef!: CdkColumnDef;\n\n  @ViewChild(CdkCellDef, {static: true})\n  cell!: CdkCellDef;\n\n  @ViewChild(CdkHeaderCellDef, {static: true})\n  headerCell!: CdkHeaderCellDef;\n\n  constructor(@Optional() private _table: CdkTable<T>) { }\n\n  ngOnInit() {\n    this._syncColumnDefName();\n\n    if (this._table) {\n      this.columnDef.cell = this.cell;\n      this.columnDef.headerCell = this.headerCell;\n      this._table.addColumnDef(this.columnDef);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._table) {\n      this._table.removeColumnDef(this.columnDef);\n    }\n  }\n\n  private _syncColumnDefName() {\n    if (this.columnDef) {\n      this.columnDef.name = this.name;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox-column.molecule.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_table",
                        "type": "CdkTable<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "_table",
                        "type": "CdkTable<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "setSignature": {
                        "name": "name",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "name",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "name",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "name",
                        "type": "string",
                        "returnType": "string",
                        "line": 13
                    }
                }
            },
            "templateData": "<ng-container matColumnDef>\n  <th mat-header-cell *matHeaderCellDef></th>\n  <td mat-cell *matCellDef=\"let item\">\n    <mat-checkbox\n      (click)=\"checkboxClick.emit(item)\"\n      [checked]=\"selectedIdSet.has(item.id)\"\n    ></mat-checkbox>\n  </td>\n</ng-container>\n"
        },
        {
            "name": "ChipsInputFieldMolecule",
            "id": "component-ChipsInputFieldMolecule-be37acfc53bd66f4a5341f4947fb4ee14da2845a7070f9c341bd0e80a41f09b1d92aa97a43934582053ed71a713c41d1be57271e55c9979a93c3583df3531b2c",
            "file": "libs/components/molecules/chips-input-field/chips-input-field.molecule.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "molecules-chips-input-field",
            "styleUrls": [
                "./chips-input-field.molecule.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chips-input-field.molecule.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "defaultValue": "new FormControl<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_control",
                    "defaultValue": "new FormControl<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "chips",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "separatorKeysCodes",
                    "defaultValue": "[ENTER, COMMA] as const",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_add",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatChipInputEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatChipInputEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "chip",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "chip",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { FormControl } from '@ngneat/reactive-forms';\n\n@Component({\n  selector: 'molecules-chips-input-field',\n  templateUrl: './chips-input-field.molecule.html',\n  styleUrls: ['./chips-input-field.molecule.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChipsInputFieldMolecule implements OnInit {\n\n  _control = new FormControl<string>('');\n\n  @Input()\n  control = new FormControl<string>();\n\n  @Input()\n  placeholder = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.control.value && this._add(this.control.value);\n\n    this._control.valueChanges.subscribe(() => this.control.setValue(this.chips.join(' ')));\n  }\n\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\n  chips: string[] = [];\n\n  add(event: MatChipInputEvent): void {\n    this._add((event.value || '').trim());\n    event.input.value = '';\n  }\n\n  remove(chip: string): void {\n    const index = this.chips.indexOf(chip);\n    index >= 0 && this.chips.splice(index, 1);\n    this.control.setValue(this.chips.join(' '));\n  }\n\n  private _add(value: string) {\n    value && this.chips.push(value);\n    this.control.setValue(this.chips.join(' '));\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  mat-input {\n    width: 100%;\n    height: 100%;\n  }\n}",
                    "styleUrl": "./chips-input-field.molecule.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-chip-list #chipList>\n  <mat-chip *ngFor=\"let chip of chips\" (removed)=\"remove(chip)\">\n    {{chip}} <mat-icon matChipRemove>cancel</mat-icon>\n  </mat-chip>\n  <input\n    [placeholder]=\"placeholder\"\n    [matChipInputFor]=\"chipList\"\n    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n    [matChipInputAddOnBlur]=\"true\"\n    (matChipInputTokenEnd)=\"add($event)\"\n    [formControl]=\"_control\"\n  >\n</mat-chip-list>\n"
        },
        {
            "name": "DateInputSectionOrganism",
            "id": "component-DateInputSectionOrganism-2baa93bbd43bbdb3f4559b518a0adcc7d8293d262f385074753212ad7f4b56d9b1d8ce1133e72313537e0bb71d23161dec657e541bdb9efb5cb9b3240dcd3cca",
            "file": "libs/components/organisms/date-input-section/date-input-section.organism.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-date-input-section",
            "styleUrls": [
                "./date-input-section.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-input-section.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "defaultValue": "new FormControl<dayjs.Dayjs>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormControl } from '@ngneat/reactive-forms';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'organisms-date-input-section',\n  templateUrl: './date-input-section.organism.html',\n  styleUrls: ['./date-input-section.organism.scss']\n})\nexport class DateInputSectionOrganism {\n\n  @Input()\n  control = new FormControl<dayjs.Dayjs>();\n\n  @Input()\n  label = '';\n\n  @Input()\n  placeholder = '';\n\n  ngOnInit() {\n    this.control.valueChanges.subscribe(console.debug);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~scoped-var' as * with ($host: 'date-input-section');\n\n:host {\n  @include property(--horizontal-padding, 16px);\n}\n\n:host {\n  display: block;\n  width: 100%;\n  padding: 0 var(--horizontal-padding);\n  box-sizing: border-box;\n\n  mat-form-field {\n    width: 100%;\n  }\n}",
                    "styleUrl": "./date-input-section.organism.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-form-field appearance=\"outline\">\n  <mat-label>{{ label }}</mat-label>\n  <input matInput [formControl]=\"control\" [placeholder]=\"placeholder\" [matDatepicker]=\"picker\">\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n  <mat-hint>Hint</mat-hint>\n</mat-form-field>"
        },
        {
            "name": "EntranceTemplate",
            "id": "component-EntranceTemplate-9e10c516cf9c43dcd456da68d57bde5af266036f541c9dbced3cf6febe210dd0df5c0314f70bfe95d91ab397d99a713e82636aa969d953bd59bfc892ba91bbbe",
            "file": "libs/components/templates/entrance/entrance.template.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "templates-entrance",
            "styleUrls": [
                "./entrance.template.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entrance.template.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isEmailSectionShown",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isPasswordSectionShown",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "signInWithGoogleButtonClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                },
                {
                    "name": "submitButtonClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'templates-entrance',\n  templateUrl: './entrance.template.html',\n  styleUrls: ['./entrance.template.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntranceTemplate {\n  @Input()\n  isEmailSectionShown = true;\n\n  @Input()\n  isPasswordSectionShown = true;\n\n  @Output()\n  submitButtonClick = new EventEmitter<void>();\n\n  @Output()\n  signInWithGoogleButtonClick = new EventEmitter<void>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~scoped-var/strict' as * with ($host: 'entrance');\n\n:host {\n  @include property(--horizontal-padding, 64px);\n  @include property(--background-color, #eee);\n}\n\n:host {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--background-color);\n\n  width: 100%;\n  height: 100%;\n\n  frames-card {\n    display: flex;\n    flex-direction: column;\n\n    width: 600px;\n    max-width: calc(100% - 32px);\n    height: fit-content;\n\n    * {\n      max-width: calc(100% - 32px);\n      --horizontal-padding: #{var(--horizontal-padding)};\n    }\n  }\n}",
                    "styleUrl": "./entrance.template.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<frames-card>\n  <frames-auto-layout vertical>\n    <organisms-heading>ログイン</organisms-heading>\n    <organisms-input-field-section\n      *ngIf=\"isEmailSectionShown\"\n      label=\"メールアドレス\"\n    ></organisms-input-field-section>\n    <organisms-input-field-section\n      *ngIf=\"isPasswordSectionShown\"\n      label=\"パスワード\"\n    ></organisms-input-field-section>\n    <organisms-action-buttons-section></organisms-action-buttons-section>\n    <organisms-social-login-section\n      (signInWithGoogleButtonClick)=\"signInWithGoogleButtonClick.emit()\"\n    ></organisms-social-login-section>\n  </frames-auto-layout>\n</frames-card>\n"
        },
        {
            "name": "HeadingOrganism",
            "id": "component-HeadingOrganism-7b76ff16f96adb8cca4cf599578416f9e05b0e5633a73c61a11e9ebf805eb98dc821be7dac9e2305f1c5f27ac49b485f050c5d7575c0c690778bee9b1c43db98",
            "file": "libs/components/organisms/heading/heading.organism.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-heading",
            "styleUrls": [
                "./heading.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./heading.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "level",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'organisms-heading',\n  templateUrl: './heading.organism.html',\n  styleUrls: ['./heading.organism.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeadingOrganism {\n  @Input()\n  level: 1 | 2 | 3 | 4 | 5 | 6 = 1;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'heading');\n\n:host {\n  @include property(--horizontal-padding, 16px);\n}\n\n:host {\n  display: block;\n  width: 100%;\n  \n  box-sizing: border-box;\n  padding: 0 var(--horizontal-padding);\n}",
                    "styleUrl": "./heading.organism.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h1 *ngIf=\"level==='1'\"><ng-content></ng-content></h1>\n<h2 *ngIf=\"level==='2'\"><ng-content></ng-content></h2>\n<h3 *ngIf=\"level==='3'\"><ng-content></ng-content></h3>\n<h4 *ngIf=\"level==='4'\"><ng-content></ng-content></h4>\n<!-- <h5 *ngIf=\"level===5\"><ng-content></ng-content></h5> -->\n<!-- <h6 *ngIf=\"level===6\"><ng-content></ng-content></h6> -->\n<!-- <ng-container [ngSwitch]=\"level\">\n  <h1 *ngSwitchDefault><ng-content></ng-content></h1>\n  <h2 *ngSwitchCase=\"2\"><ng-content></ng-content></h2>\n  <h3 *ngSwitchCase=\"3\"><ng-content></ng-content></h3>\n  <h4 *ngSwitchCase=\"4\"><ng-content></ng-content></h4>\n  <h5 *ngSwitchCase=\"5\"><ng-content></ng-content></h5>\n  <h6 *ngSwitchCase=\"6\"><ng-content></ng-content></h6>\n</ng-container> -->"
        },
        {
            "name": "IndexPage",
            "id": "component-IndexPage-9723d783fa0a6f13a02c2da6fe30c79f424a3944450ceb2b76e306f604329de34af16095528b5b5e2a7c982840d4703ff1d49bb2786af2d36fecbcaf7d52a882",
            "file": "libs/components/pages/_index/index.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pages-index",
            "styleUrls": [],
            "styles": [
                ":host { display: none }"
            ],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pages-index',\n  template:'',\n  styles: [':host { display: none }'],\n})\nexport class IndexPage { }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ":host { display: none }\n"
        },
        {
            "name": "InputFieldSectionOrganism",
            "id": "component-InputFieldSectionOrganism-be5701d1a430d65df8175f892ddc602b35be6d3292ae63627270d2b4ce242e195b95568faca6d220e785fe46cdfae0a2c555857838424a9e08a0f7cb8f1f4ab9",
            "file": "libs/components/organisms/input-field-section/input-field-section.organism.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-input-field-section",
            "styleUrls": [
                "./input-field-section.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-field-section.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl } from '@ngneat/reactive-forms';\n\n@Component({\n  selector: 'organisms-input-field-section',\n  templateUrl: './input-field-section.organism.html',\n  styleUrls: ['./input-field-section.organism.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {class: 'organism section'}\n})\nexport class InputFieldSectionOrganism {\n  @Input()\n  label = '';\n\n  @Input()\n  placeholder = '';\n\n  @Input()\n  control = new FormControl('');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~scoped-var' as * with ($host: 'input-field-section');\n\n:host {\n  @include property(--horizontal-padding, 16px);\n}\n\n:host {\n  display: block;\n  width: 100%;\n  padding: 0 var(--horizontal-padding);\n  box-sizing: border-box;\n\n  .molecule.input-field, mat-form-field {\n    width: 100%;\n  }\n}",
                    "styleUrl": "./input-field-section.organism.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-form-field appearance=\"outline\">\n  <mat-label>{{ label }}</mat-label>\n  <input matInput [formControl]=\"control\" [placeholder]=\"placeholder\">\n  <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n  <mat-hint>Hint</mat-hint>\n</mat-form-field>"
        },
        {
            "name": "LineUpFrame",
            "id": "component-LineUpFrame-a26b6a694fdf1ac4a92091b922ce63555ca73b323a8ed40467e65119ddcd00e9a0640bbed35ee31ba2e8bd8930ce73da9eb6953d0bf02d7ac9395eed1433e07e",
            "file": "libs/components/frames/line-up/line-up.frame.ts",
            "changeDetection": "ChangeDetectionStrategy.Default",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "frames-line-up",
            "styleUrls": [
                "./line-up.frame.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./line-up.frame.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'root'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "minNextWidth",
                    "defaultValue": "360",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "outlet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "RouterOutlet",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMainHidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'attr.is-main-hidden'"
                        }
                    ]
                },
                {
                    "name": "next",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'next', {static: true}"
                        }
                    ]
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LineUpService",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.is-main-hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, Injectable, Input, ViewChild } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { LINE_UP_ANIMATIONS } from './line-up.animations';\nimport { fromResize } from './resize-observer';\n\nconst _fromResize = (el: ElementRef) => fromResize(el.nativeElement)\n  .pipe(map(({contentRect}: {contentRect: {width: number}}) => contentRect?.width ?? 0))\n  .pipe(distinctUntilChanged());\n\n@Injectable({providedIn: 'root'})\nclass LineUpService {\n  pageAnimationDone$ = new ReplaySubject(1);\n}\n\n@Component({\n  selector: 'frames-line-up',\n  templateUrl: './line-up.frame.html',\n  styleUrls: ['./line-up.frame.scss'],\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: LINE_UP_ANIMATIONS,\n})\nexport class LineUpFrame {\n  @HostBinding('attr.is-main-hidden')\n  isMainHidden = false;\n\n  @Input()\n  label = 'root';\n\n  @Input()\n  outlet?: RouterOutlet;\n\n  @Input()\n  minNextWidth: number = 360;\n\n  @ViewChild('next', {static: true})\n  next!: ElementRef;\n\n  get page(): string {\n    const page: string = this.outlet?.activatedRouteData?.page;\n    return page === 'Blank' ? 'Blank' : this.isMainHidden ? `Next` : `NextWithMainPage`;\n  }\n\n  constructor(\n    public service: LineUpService,\n    private cd: ChangeDetectorRef,\n  ) { }\n\n  ngOnInit(): void {\n    if (this.label === 'root') return; \n\n    _fromResize(this.next).subscribe((width: number) => {\n      this.isMainHidden = width > this.minNextWidth;\n      this.cd.detectChanges();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'line-up');\n\n:host {\n\t@include property(--gap, 1px);\n\t@include property(--background, #ccc);\n\t@include property(--contents-background, transparent);\n}\n\n:host {\n\tposition: relative;\n\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tgap: var(--gap);\n\n\twidth: fit-content;\n\theight: 100%;\n\n\tbackground: var(--background);\n\n\t.contents {\n\t\tdisplay: flex;\n\n\t\tmax-width: fit-content;\n\t\theight: 100%;\n\t\tbackground: var(--contents-background);\n\n\t\t&.main{\n\t\t\toverflow: hidden;\n\t\t\tjustify-content: flex-end;\n\t\t}\n\n\t\t&.next{\n\t\t\t// position: relative;\n\t\t\toverflow: visible;\n\t\t\tjustify-content: flex-start;\n\t\t}\n\n\t\t// &.next:empty {\n\t\t// \tdisplay: none;\n\t\t// }\n\t}\n}\n",
                    "styleUrl": "./line-up.frame.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "LineUpService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "LineUpService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "page": {
                    "name": "page",
                    "getSignature": {
                        "name": "page",
                        "type": "string",
                        "returnType": "string",
                        "line": 40
                    }
                }
            },
            "templateData": "<div class=\"main contents\" [@visibleHidden]=\"isMainHidden ? 'hidden' : 'visible' \" #main>\n  <ng-content select=\"[main]\"></ng-content>\n</div>\n<div class=\"next contents\" [@pageChange]=\"page\" #next>\n  <ng-content select=\"[next]\"></ng-content>\n</div>"
        },
        {
            "name": "LoadingTemplate",
            "id": "component-LoadingTemplate-3345d4edbe5562c565a49c76d9b11f9a0a4be12b8c82f6f544b017161fb28dd3bb1e9556a2c814603af522e00ab66558f703456175aa00b6a59dab3aab328388",
            "file": "libs/components/templates/loading/loading.template.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "templates-loading",
            "styleUrls": [
                "./loading.template.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loading.template.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'templates-loading',\n  templateUrl: './loading.template.html',\n  styleUrls: ['./loading.template.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoadingTemplate { }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex; \n  width: 100%;\n  height: 100%;\n\n  justify-content: center; \n  align-items: center;\n\n  background-color: rgba(0, 0, 0, 0.4);\n}",
                    "styleUrl": "./loading.template.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-spinner></mat-spinner>\n"
        },
        {
            "name": "MenuOrganism",
            "id": "component-MenuOrganism-5ceb27aa106df66b10022a5d28fefdd7ec547d3f1aa596462750392afecf0eb16487009ee08ce01e9b9eb7239db75cad5b15621b3d285b48907d317a920d7d31",
            "file": "libs/components/organisms/menu/menu.organism.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-menu",
            "styleUrls": [
                "./menu.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ActionItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionItemClick",
                    "defaultValue": "new EventEmitter<[ActionItem]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\nimport { ActionItem } from '@ng-atomic/common/models';\n\n@Component({\n  selector: 'organisms-menu',\n  templateUrl: './menu.organism.html',\n  styleUrls: ['./menu.organism.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MenuOrganism {\n  \n  @Input()\n  actionItems: ActionItem[] = [];\n\n  @Output()\n  actionItemClick = new EventEmitter<[ActionItem]>();\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'menu');\n\n:host {\n\t@include property(--primary-color, blue);\n\t@include property(--secondary-color, blue);\n\t@include property(--color, white);\n}\n\n:host {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: var(--primary-color);\n\tcolor: var(--color);\n\n\t.mat-list-item {\n\t\theight: 3rem !important;\n\t}\n\n\t::ng-deep .mat-list-item {\n\t\t.mat-list-item-content {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgrid-gap: 8px;\n\t\t\tpadding-top: 8px;\n\t\t\tpadding-bottom: 8px;\n\t\t\tcursor: pointer;\n\n\t\t\tcolor: var(--color);\n\t\t\tfont-size: 12px;\n\t\t}\n\n\t\t.mat-list-text {\n\t\t\tpadding-left: 8px !important;\n\t\t}\n\t}\n\n}\n",
                    "styleUrl": "./menu.organism.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-list>\n  <mat-list-item (click)=\"actionItemClick.emit([item])\" *ngFor=\"let item of actionItems\">\n    <mat-icon mat-list-icon> {{ item?.icon }}</mat-icon>\n    <div mat-line>{{item.name}}</div>\n  </mat-list-item>\n</mat-list>\n"
        },
        {
            "name": "OverlayFrame",
            "id": "component-OverlayFrame-cd7159f1aaecce4e4172698f52bd57ac4dfae886b69984b9b27a2ca18664b14ac641a3bad4457f1783100f29da8cd79640774b2cd06075b04dcba4dc2913b20f",
            "file": "libs/components/frames/overlay/overlay.frame.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "frames-overlay",
            "styleUrls": [
                "./overlay.frame.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./overlay.frame.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "outlet",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "RouterOutlet | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "prepareRoute",
                    "args": [
                        {
                            "name": "outlet",
                            "type": "RouterOutlet",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "outlet",
                            "type": "RouterOutlet",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { slideInAnimation } from './overlay.animations';\n\n@Component({\n  selector: 'frames-overlay',\n  templateUrl: './overlay.frame.html',\n  styleUrls: ['./overlay.frame.scss'],\n  animations: [slideInAnimation],\n})\nexport class OverlayFrame {\n  \n  @Input()\n  outlet?: RouterOutlet | null = null;\n\n  @Input()\n  isLoading: boolean = false;\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet?.activatedRouteData?.page;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'line-overlay');\n\n:host {\n    @include var(--cell, 8px);\n    @include var(--width, 100%);\n    @include var(--height, 100%);\n}\n\n:host {\n    position: relative;\n    display: block;\n    width: var(--width);\n    height: var(--height);\n\n    .loading {\n        position: absolute;\n        z-index: 1000;\n        top: 0;\n        left: 0;\n\n        display: flex; \n        width: var(--width); \n        height: var(--height);\n    \n        justify-content: center; \n        align-items: center;\n\n        background-color: rgba(0, 0, 0, 0.4);\n    }\n\n    .main.page {\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n\n        width: var(--width);\n        height: var(--height);\n\n        overflow: hidden;\n\n        * {\n            --cell: #{var(--cell)};\n            --width: #{var(--width)};\n            --height: #{var(--height)};\n        }\n    }\n\n    .next.page {\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 2;\n\n        width: var(--width);\n        height: auto;\n\n        * {\n            --cell: #{var(--cell)};\n            --width: #{var(--width)};\n            --height: #{var(--height)};\n        }\n    }\n\n}",
                    "styleUrl": "./overlay.frame.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"loading\" *ngIf=\"isLoading\">\n    <mat-spinner></mat-spinner>\n</div>\n<div class=\"main page\">\n    <ng-content select=[mainPage]></ng-content>\n</div>\n<div class=\"next page\" [@routeAnimations]=\"prepareRoute(outlet)\">\n    <ng-content select=[nextPage]></ng-content>\n</div>"
        },
        {
            "name": "PaginatorOrganism",
            "id": "component-PaginatorOrganism-2d44cca8deea488bf5e67c51874958247763ad9f960d12ba9e83dc8fdbcd74bde136d4172e6e60f242601213f1a69606c93d4d61cfa9c9588eafd2964078ea7f",
            "file": "libs/components/organisms/paginator/paginator.organism.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-paginator",
            "styleUrls": [
                "./paginator.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./paginator.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "defaultValue": "new FormControl<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "PageEvent",
                    "decorators": []
                },
                {
                    "name": "pageSizeOptions",
                    "defaultValue": "[5, 10, 25, 100]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number[]",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<PageEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { FormControl } from '@ngneat/reactive-forms';\n\n@Component({\n  selector: 'organisms-paginator',\n  templateUrl: './paginator.organism.html',\n  styleUrls: ['./paginator.organism.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {class: 'organism'},\n})\nexport class PaginatorOrganism {\n\n  @Input()\n  control = new FormControl<string>('');\n\n  @Input()\n  placeholder = '';\n\n  @Input()\n  page!: PageEvent;\n\n  @Input()\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @Output()\n  pageChange = new EventEmitter<PageEvent>();\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n\n  frames-auto-layout {\n    --vertical-padding: 0;\n    justify-content: space-between;\n\n    molecules-chips-input-field {\n      width: auto;\n    }\n\n    mat-paginator {\n      width: fit-content;\n    }\n  }\n}",
                    "styleUrl": "./paginator.organism.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<frames-auto-layout horizontal>\n  <molecules-chips-input-field\n    [control]=\"control\"\n    [placeholder]=\"placeholder\"\n  ></molecules-chips-input-field>\n  <mat-paginator \n    [length]=\"page.length\"\n    [pageSize]=\"page.pageSize\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    (page)=\"pageChange.emit($event)\"\n    aria-label=\"Select page\">\n  </mat-paginator>\n</frames-auto-layout>\n\n"
        },
        {
            "name": "ScrollFrame",
            "id": "component-ScrollFrame-858b34452419970e0e27f37559667b627ad30d53a07302fb67b3a84aca101c452094525426a3e6a1344e9bab7e3835049e9f503080e2455738a7691a8d9c4fec",
            "file": "libs/components/frames/scroll/scroll.frame.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "frames-scroll",
            "styleUrls": [
                "./scroll.frame.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scroll.frame.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'frames-scroll',\n  templateUrl: './scroll.frame.html',\n  styleUrls: ['./scroll.frame.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ScrollFrame { }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'scroll');\n\n:host {\n\t@include property(--height, 100%);\n\t@include property(--navigator-height, 56px);\n}\n\n:host {\n\theight: var(--height);\n\toverflow: hidden;\n\n\t.navigator-container {\n\t\theight: var(--navigator-height);\n\t\toverflow: hidden;\n\t\ttouch-action: none;\n\t}\n\n\t.contents-container {\n\t\theight: calc(#{var(--height)} - #{var(--navigator-height)});\n\t\toverflow: scroll;\n\t\t-webkit-overflow-scrolling: touch;\n\t}\n\n}\n",
                    "styleUrl": "./scroll.frame.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"navigator-container\" iosSafariScrollBuggyfill>\n  <ng-content select=[navigator]></ng-content>\n</div>\n<div class=\"contents-container\">\n  <ng-content select=[contents]></ng-content>\n</div>"
        },
        {
            "name": "SelectInputFieldMolecule",
            "id": "component-SelectInputFieldMolecule-983be321a78aa94e988555f1ee59d8e575a19b555890fd502e9ad1d9e21eb338e3b5e1077d65489f52bb85e5d9e648c67729183bba3ace2e6317c5d2d0ee8097",
            "file": "libs/components/molecules/select-input-field/select-input-field.molecule.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "molecules-select-input-field",
            "styleUrls": [
                "./select-input-field.molecule.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input-field.molecule.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "defaultValue": "new FormControl<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Option<T>[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "value",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl } from '@ngneat/reactive-forms';\n\ninterface Option<T> {\n  name: string;\n  value: T;\n}\n\n@Component({\n  selector: 'molecules-select-input-field',\n  templateUrl: './select-input-field.molecule.html',\n  styleUrls: ['./select-input-field.molecule.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {class: 'molecule input-field'},\n})\nexport class SelectInputFieldMolecule<T> {\n\n  @Input()\n  label: string = '';\n\n  @Input()\n  control = new FormControl<T>();\n\n  @Input()\n  options: Option<T>[] = [];\n\n  value = (item: Option<T>) => item?.value; \n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~scoped-var' as * with ($host: 'select-input-field');\n\n:host {\n  @include property(--horizontal-padding, 16px);\n}\n\n:host {\n  display: block;\n  width: 100%;\n\n  mat-form-field {\n    width: 100%;\n  }\n}",
                    "styleUrl": "./select-input-field.molecule.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-form-field appearance=\"outline\">\n  <mat-label>{{ label }}</mat-label>\n  <mat-select [formControl]=\"control\">\n    <mat-option *ngFor=\"let option of options; trackBy value;\" [value]=\"option.value\">\n      {{ option.name }}\n    </mat-option>\n  </mat-select>\n</mat-form-field>"
        },
        {
            "name": "SelectInputSectionOrganism",
            "id": "component-SelectInputSectionOrganism-e6ecb1cc3bafe700e6f500ae62684fba66ed148f5499c6b3515e032203eaeb322e790f2421dda92a1f155ac3bdd1e4b4c58fbf99f2b25bba26650d1e92966eb8",
            "file": "libs/components/organisms/select-input-section/select-input-section.organism.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-select-input-section",
            "styleUrls": [
                "./select-input-section.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input-section.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "defaultValue": "new FormControl<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "literal type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl } from '@ngneat/reactive-forms';\n\n@Component({\n  selector: 'organisms-select-input-section',\n  templateUrl: './select-input-section.organism.html',\n  styleUrls: ['./select-input-section.organism.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectInputSectionOrganism<T> {\n\n  @Input()\n  label: string = '';\n\n  @Input()\n  control = new FormControl<T>();\n\n  @Input()\n  options: {name: string, value: T}[] = [];\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~scoped-var' as * with ($host: 'select-input-section');\n\n:host {\n  @include property(--horizontal-padding, 16px);\n}\n\n:host {\n  display: block;\n  width: 100%;\n  padding: 0 var(--horizontal-padding);\n  box-sizing: border-box;\n\n  .molecule.input-field {\n    width: 100%;\n  }\n}",
                    "styleUrl": "./select-input-section.organism.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<molecules-select-input-field\n  [label]=\"label\"\n  [control]=\"control\"\n  [options]=\"options\"\n></molecules-select-input-field>"
        },
        {
            "name": "SmartColumnMolecule",
            "id": "component-SmartColumnMolecule-43dfdaa6a68902089fe17d3e9c47296ccd9cce6ef07e471ccf9cada5e08c332298cccd07c1001e1eced52fd76b0faa6540a0d6369a351a34f5306bc20437d18a",
            "file": "libs/components/molecules/smart-column/smart-column.molecule.ts",
            "changeDetection": "ChangeDetectionStrategy.Default",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "molecules-smart-column",
            "styleUrls": [
                "./smart-column.molecule.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./smart-column.molecule.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataAccessor",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { MatTextColumn } from '@angular/material/table';\n// TODO(nontangent): 依存を引き剥がす\nimport { toObject } from '@ng-atomic/common/utils';\nimport { flatten } from 'flat';\n\n@Component({\n  selector: 'molecules-smart-column',\n  templateUrl: './smart-column.molecule.html',\n  styleUrls: ['./smart-column.molecule.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class SmartColumnMolecule<T> extends MatTextColumn<T> {\n  dataAccessor = (data: any, name: string): string => {\n    return name.includes('.') ? flatten(toObject(data))?.[name] : data?.[name];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "th[mat-header-cell], td[mat-cell] {\n  .nowrap {\n    max-width: 160px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  } \n}\n",
                    "styleUrl": "./smart-column.molecule.scss"
                }
            ],
            "stylesData": "",
            "extends": "MatTextColumn",
            "templateData": "<ng-container matColumnDef>\n  <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n    <p class=\"nowrap\">{{headerText}}</p>\n  </th>\n  <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n    <p class=\"nowrap\">{{dataAccessor(data, name) | smartExp:name}}</p>\n  </td>\n  \n</ng-container>"
        },
        {
            "name": "SmartCrudTemplate",
            "id": "component-SmartCrudTemplate-e0cf422aa1edfdc8b67823b1a0b8fde00382121d3c51c22e5bae1b0c9dd9c548d6bf14e3facc39e325720ea225e350ec8e4fe5135288c102a445705015be89d6",
            "file": "libs/components/templates/smart-crud/smart-crud.template.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "templates-smart-crud",
            "styleUrls": [
                "./smart-crud.template.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./smart-crud.template.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "canBack",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "FormGroup<any>",
                    "decorators": []
                },
                {
                    "name": "menuActionItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "ActionItem[]",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "defaultValue": "'create'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "\"create\" | \"update\"",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionItemClick",
                    "defaultValue": "new EventEmitter<ActionItemEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                },
                {
                    "name": "backButtonClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                },
                {
                    "name": "createButtonClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter"
                },
                {
                    "name": "updateButtonClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "trackByIndex",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methodsClass": [
                {
                    "name": "onActionButtonClick",
                    "args": [
                        {
                            "type": "[ActionItem]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "[ActionItem]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ActionItem, ActionItemEvent } from '@ng-atomic/common/models';\nimport { FormGroup } from '@ngneat/reactive-forms';\n\n@Component({\n  selector: 'templates-smart-crud',\n  templateUrl: './smart-crud.template.html',\n  styleUrls: ['./smart-crud.template.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {class: 'template'},\n})\nexport class SmartCrudTemplate {\n\n  @Input()\n  canBack = false;\n\n  @Input()\n  name: string = '';\n\n  @Input()\n  form!: FormGroup<any>;\n\n  @Input()\n  mode: 'create' | 'update' = 'create';\n\n  @Input()\n  menuActionItems: ActionItem[] = [];\n\n  @Output()\n  actionItemClick = new EventEmitter<ActionItemEvent>();\n\n  @Output()\n  backButtonClick = new EventEmitter();\n\n  @Output()\n  createButtonClick = new EventEmitter<void>();\n\n  @Output()\n  updateButtonClick = new EventEmitter<void>();\n\n  get title(): string {\n    switch (this.mode) {\n      case 'create': return `${this.name}の作成`;\n      case 'update': return `${this.name}の更新`;\n    }\n  }\n\n  get actionItems(): ActionItem[] {\n    switch (this.mode) {\n      case 'create': return [{id: 'create', name: '作成'}];\n      case 'update': return [{id: 'update', name: '更新'}];\n    }\n  }\n\n  get controls() {\n    return Object.entries(this.form.controls);\n  }\n\n  trackByIndex = (index: number) => index;\n\n  onActionButtonClick([{id}]: [ActionItem]): void {\n    switch(id) {\n      case 'create': return this.createButtonClick.emit();\n      case 'update': return this.updateButtonClick.emit();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'smart-crud');\n@use 'atomic/template' as *;\n\n:host {\n  @include property(--horizontal-padding, 16px);\n  @include property(--vertical-padding, 24px);\n  @include property(--gap, 16px);\n  @include template($host);\n}\n\n:host {\n  display: block;\n  width: 100%;\n  height: 100%;\n  background: white;\n\n  frames-auto-layout {\n    height: fit-content;\n    --gap: #{var(--gap)};\n    --vertical-padding: #{var(--vertical-padding)};\n\n    * {\n      --horizontal-padding: #{var(--horizontal-padding)};\n    }\n  }\n}\n",
                    "styleUrl": "./smart-crud.template.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "title": {
                    "name": "title",
                    "getSignature": {
                        "name": "title",
                        "type": "string",
                        "returnType": "string",
                        "line": 41
                    }
                },
                "actionItems": {
                    "name": "actionItems",
                    "getSignature": {
                        "name": "actionItems",
                        "type": "[]",
                        "returnType": "ActionItem[]",
                        "line": 48
                    }
                },
                "controls": {
                    "name": "controls",
                    "getSignature": {
                        "name": "controls",
                        "type": "",
                        "returnType": "",
                        "line": 55
                    }
                }
            },
            "templateData": "<frames-scroll>\n  <organisms-back-navigator \n    [actionItems]=\"menuActionItems\"\n    [canBack]=\"canBack\"\n    [title]=\"title\"\n    (actionItemClick)=\"actionItemClick.emit($event)\"\n    (backButtonClick)=\"backButtonClick.emit()\"\n    navigator\n  ></organisms-back-navigator>\n  <frames-auto-layout vertical contents>\n    <ng-container *ngFor=\"let entry of controls; trackBy:trackByIndex\" [ngSwitch]=\"(entry[0] | smartField)?.type\">\n      <organisms-select-input-section\n        *ngSwitchCase=\"'select'\"\n        [label]=\"entry[0] | D\"\n        [control]=\"entry[1]\"\n        [options]=\"(entry[0] | smartField)?.options\"\n      ></organisms-select-input-section>\n      <organisms-date-input-section\n        *ngSwitchCase=\"'date'\"\n        [label]=\"entry[0] | D\"\n        [control]=\"entry[1]\"\n      ></organisms-date-input-section>\n      <organisms-input-field-section\n        *ngSwitchDefault\n        [label]=\"entry[0] | D\"\n        [control]=\"entry[1]\"\n      ></organisms-input-field-section>\n    </ng-container>\n    <organisms-action-buttons-section\n      [actionItems]=\"actionItems\"\n      (actionItemClick)=\"onActionButtonClick($event)\"\n    ></organisms-action-buttons-section>\n  </frames-auto-layout>\n</frames-scroll>"
        },
        {
            "name": "SmartIndexTemplate",
            "id": "component-SmartIndexTemplate-eaa521d2286cabb6106b28f154c13a915e6ddc690d687a78f07095dfab0f8621093e486ddd037d007e9faa0a8a9bc35f44215767bdc412046eb1a964d844af77",
            "file": "libs/components/templates/smart-index/smart-index.template.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "templates-smart-index",
            "styleUrls": [
                "./smart-index.template.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./smart-index.template.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "ActionItem[]",
                    "decorators": []
                },
                {
                    "name": "canBack",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "menuActionItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "ActionItem[]",
                    "decorators": []
                },
                {
                    "name": "page",
                    "defaultValue": "{\n    pageIndex: 0,\n    pageSize: 20,\n    length: 100,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "PageEvent",
                    "decorators": []
                },
                {
                    "name": "properties",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "()[]",
                    "decorators": []
                },
                {
                    "name": "queryControl",
                    "defaultValue": "new FormControl<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "queryPlaceholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectedIdSet",
                    "defaultValue": "new Set<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionItemClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "EventEmitter"
                },
                {
                    "name": "backButtonClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "checkboxClick",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "EventEmitter"
                },
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<PageEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActionItem } from '@ng-atomic/common/models';\nimport { FormControl } from '@ngneat/reactive-forms';\n\nexport interface Page extends PageEvent { }\n\nexport class Page {\n  static fromObj(event: PageEvent = {pageSize: 50, pageIndex: 0, length: 100}): Page {\n    return Object.assign(new Page(), event);\n  }\n\n  get start(): number {\n    return this.pageIndex * this.pageSize;\n  }\n\n  get end(): number {\n    return Math.min((this.pageIndex + 1) * this.pageSize, this.length);\n  }\n\n  patch(obj: Partial<PageEvent>): Page {\n    return Page.fromObj({...this, ...obj});\n  }\n}\n\n@Component({\n  selector: 'templates-smart-index',\n  templateUrl: './smart-index.template.html',\n  styleUrls: ['./smart-index.template.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'template' },\n})\nexport class SmartIndexTemplate<T> {\n\n  @Input()\n  canBack = false;\n\n  @Input()\n  queryControl = new FormControl<string>();\n\n  @Input()\n  title: string = '';\n\n  @Input()\n  items: T[] = [];\n\n  @Input()\n  actionItems: ActionItem[] = [];\n\n  @Input()\n  menuActionItems: ActionItem[] = [];\n\n  @Input()\n  properties: (keyof T)[] =  [];\n\n  @Input()\n  selectedIdSet = new Set<string>();\n\n  @Input()\n  page: PageEvent = {\n    pageIndex: 0,\n    pageSize: 20,\n    length: 100,\n  };\n\n  @Input()\n  queryPlaceholder = '';\n\n  @Output()\n  actionItemClick = new EventEmitter();\n\n  @Output()\n  backButtonClick = new EventEmitter();\n\n  @Output()\n  checkboxClick = new EventEmitter<T>();\n\n  @Output()\n  pageChange = new EventEmitter<PageEvent>();\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'smart-index');\n@use 'atomic/template' as *;\n\n:host {\n  @include property(--navigator-height, 56px);\n}\n\n:host {\n  @include template($host);\n\n  frame-scroll {\n    // --height: 100vh;\n  }\n\n  frames-auto-layout {\n    --gap: 0;\n    --vertical-padding: 0;\n  }\n}",
                    "styleUrl": "./smart-index.template.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<frames-scroll>\n  <organisms-back-navigator\n    [canBack]=\"canBack\"\n    [title]=\"title\"    \n    [actionItems]=\"menuActionItems\"\n    (actionItemClick)=\"actionItemClick.emit($event)\"\n    (backButtonClick)=\"backButtonClick.emit()\"\n    navigator\n  ></organisms-back-navigator>\n  <frames-auto-layout vertical contents>\n    <organisms-smart-table\n      [items]=\"items\"\n      [actionItems]=\"actionItems\"\n      [columns]=\"properties\"\n      [selectedIdSet]=\"selectedIdSet\"\n      (actionItemClick)=\"actionItemClick.emit($event)\"\n      (checkboxClick)=\"checkboxClick.emit($event)\"\n    ></organisms-smart-table>\n    <organisms-paginator\n      [control]=\"queryControl\"\n      [page]=\"page\"\n      [placeholder]=\"queryPlaceholder\"\n      (pageChange)=\"pageChange.emit($event)\"\n    ></organisms-paginator>\n  </frames-auto-layout>\n</frames-scroll>"
        },
        {
            "name": "SmartTableOrganism",
            "id": "component-SmartTableOrganism-5801b63d8d1e6d2f2098b83c38914f80b1dff01cda39b14c1833202eb919c0539a578a4eebb23ca60ef022f19135023c4ae32b714732bdd6b5d4008eae7281a8",
            "file": "libs/components/organisms/smart-table/smart-table.organism.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-smart-table",
            "styleUrls": [
                "./smart-table.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./smart-table.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "ActionItem[]",
                    "decorators": []
                },
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "()[]",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Item[]",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "patientsSize",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "selectedIdSet",
                    "defaultValue": "new Set<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionItemClick",
                    "defaultValue": "new EventEmitter<[ActionItem, Item]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter"
                },
                {
                    "name": "checkboxClick",
                    "defaultValue": "new EventEmitter<[Item, boolean]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter"
                },
                {
                    "name": "itemCheck",
                    "defaultValue": "new EventEmitter<[Item, boolean]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                },
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ActionItem } from '@ng-atomic/common/models';\n\n\n@Component({\n  selector: 'organisms-smart-table',\n  templateUrl: './smart-table.organism.html',\n  styleUrls: ['./smart-table.organism.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {class: 'organism'}\n})\nexport class SmartTableOrganism<Item extends object> {\n\n  @Input()\n  columns: (keyof Item)[] = [];\n\n  get displayedColumns(): (keyof Item | string)[] {\n    return [...this.columns];\n  }\n\n  @Input()\n  items: Item[] = [];\n\n  @Input()\n  patientsSize: number = 0;\n\n  @Input()\n  pageSize: number = 0;\n\n  @Input()\n  actionItems: ActionItem[] = [];\n\n  @Input()\n  selectedIdSet = new Set<string>();\n\n  @Output()\n  actionItemClick = new EventEmitter<[ActionItem, Item]>();\n  \n  @Output()\n  checkboxClick = new EventEmitter<[Item, boolean]>();\n\n  @Output()\n  pageChange = new EventEmitter();\n\n  @Output()\n  itemCheck = new EventEmitter<[Item, boolean]>();\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'smart-table');\n@use 'atomic/organism' as *;\n\n:host {\n  @include var(--width, 100%);\n  @include var(--cell, 8px);\n}\n\n:host {\n  @include organism($host);\n\n\tposition: relative;\n  width: 100%;\n  height: 100%;\n  overflow: scroll;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  table {\n    width: 100%;\n    max-height: 100%;\n\n    .nowrap {\n      width: 160px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  }\n\n  .no-data-message {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    width: calc(var(--width) - var(--cell) * 4);\n    height: 3em;\n    padding-left: calc(var(--cell) * 2);\n    padding-right: calc(var(--cell) * 2);\n  }\n}",
                    "styleUrl": "./smart-table.organism.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "displayedColumns": {
                    "name": "displayedColumns",
                    "getSignature": {
                        "name": "displayedColumns",
                        "type": "[]",
                        "returnType": "[]",
                        "line": 17
                    }
                }
            },
            "templateData": "<table mat-table [dataSource]=\"items\" matSort matSortDisableClear matSortDirection=\"desc\">\n  <ng-container *ngFor=\"let name of displayedColumns\" [ngSwitch]=\"name\">\n    <molecules-checkbox-column\n      *ngSwitchCase=\"'__checkbox'\"\n      name=\"__checkbox\"\n      [selectedIdSet]=\"selectedIdSet\"\n      (checkboxClick)=\"checkboxClick.emit($event)\"\n    ></molecules-checkbox-column>\n    <molecules-actions-column \n      *ngSwitchCase=\"'__actions'\" \n      name=\"__actions\" \n      [actionItems]=\"actionItems\"\n      (actionItemClick)=\"actionItemClick.emit($event)\"\n    ></molecules-actions-column>\n    <molecules-smart-column *ngSwitchDefault [name]=\"name\" [headerText]=\"name | D\"></molecules-smart-column>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n  <tr mat-row *matRowDef=\"let item; columns: displayedColumns;\"></tr>\n</table>\n<div *ngIf=\"!items?.length\" class=\"no-data-message\">データがありません。</div>"
        },
        {
            "name": "SocialLoginSectionOrganism",
            "id": "component-SocialLoginSectionOrganism-54a11cfce862c151e5a5ff00b6656d47deaf4922fc660c578b4766e067635ea062b5d7d18caf4d32c9f863838682c5a168217ba2fc22adf70aaff27ca6ade69a",
            "file": "libs/components/organisms/social-login-section/social-login-section.organism.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-social-login-section",
            "styleUrls": [
                "./social-login-section.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./social-login-section.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "signInWithGoogleButtonClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'organisms-social-login-section',\n  templateUrl: './social-login-section.organism.html',\n  styleUrls: ['./social-login-section.organism.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SocialLoginSectionOrganism {\n\n  @Output()\n  signInWithGoogleButtonClick = new EventEmitter<void>();\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with ($host: 'heading');\n\n:host {\n  @include property(--horizontal-padding, 16px);\n}\n\n\n:host {\n  display: block;\n  width: 100%;\n  padding: 0 var(--horizontal-padding);\n  box-sizing: border-box;\n\n  button {\n    width: 100%;\n    height: 56px;\n  }\n}",
                    "styleUrl": "./social-login-section.organism.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  mat-raised-button \n  color=\"primary\" \n  (click)=\"signInWithGoogleButtonClick.emit()\"\n>Googleアカウントでログイン</button>"
        },
        {
            "name": "TopNavigatorOrganism",
            "id": "component-TopNavigatorOrganism-683904c121ca2dc08f968d75d7039ef59caf83c86d98235c162ff57a1bb2132b84677948f769812a9a5d28cafc7f80ab190205376b96af5c8da749558cfe190f",
            "file": "libs/components/organisms/top-navigator/top-navigator.organism.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "organisms-top-navigator",
            "styleUrls": [
                "./top-navigator.organism.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./top-navigator.organism.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "menuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "MenuItem[]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "menuItemClick",
                    "defaultValue": "new EventEmitter<MenuItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { MenuItem } from '@ng-atomic/common/models';\n\n\n@Component({\n  selector: 'organisms-top-navigator',\n  templateUrl: './top-navigator.organism.html',\n  styleUrls: ['./top-navigator.organism.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TopNavigatorOrganism {\n\n  @Input()\n  title?: string;\n\n  @Input()\n  menuItems: MenuItem[] = [];\n\n  @Output()\n  menuItemClick = new EventEmitter<MenuItem>();\n  \n  id = (item: {id: string}) => item.id;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'scoped-var/strict' as * with($host: 'top-navigator');\n@use 'atomic/organism' as *;\n\n:host {\n\t@include organism($host);\n\t@include external-property(--primary-500);\n}\n\n:host {\n\twidth: 100%;\n\theight: 56px;\n\n\tmat-toolbar {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tpadding: 0 24px;\n\n\t\t.title-container {\n\t\t\tcolor: var(--primary-500);\n\t\t\tfont-size: 1.25rem;\n\t\t\tline-height: 21px;\n\n\t\t\tatoms-kurakatsu-logo {\n\t\t\t\twidth: auto;\n\t\t\t}\n\t\t}\n\n\t\tatoms-user-icon {\n\t\t\twidth: 32px;\n\t\t\theight: 32px;\n\t\t}\n\t}\n}\n",
                    "styleUrl": "./top-navigator.organism.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-toolbar color=\"primary\">\n  <div class=\"title-container\">\n    {{ title || '' }}\n  </div>\n  <div>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" *ngIf=\"menuItems.length\">\n      <mat-icon>menu</mat-icon>\n    </button>\n  </div>\n</mat-toolbar>\n\n<mat-menu #menu=\"matMenu\">\n  <button \n    *ngFor=\"let item of menuItems; trackBy:id\"\n    mat-menu-item \n    (click)=\"menuItemClick.emit(item)\"\n  >{{ item.name }}</button>\n</mat-menu>"
        }
    ],
    "modules": [
        {
            "name": "ActionButtonsSectionModule",
            "id": "module-ActionButtonsSectionModule-b5c3269b8edca9968619299f393d13204d9675f2cfa8689225f2452228f246c38b4fbb506b0b1c04f479177d89330ee00403239457a1d00cbfd0d34beabaf19c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/action-buttons-section/action-buttons-section.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionButtonsSectionOrganism } from './action-buttons-section.organism';\n\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    ActionButtonsSectionOrganism\n  ],\n  imports: [\n    CommonModule,\n    // Materials\n    MatButtonModule,\n  ],\n  exports: [\n    ActionButtonsSectionOrganism\n  ]\n})\nexport class ActionButtonsSectionModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ActionButtonsSectionOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ActionButtonsSectionOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ActionsColumnModule",
            "id": "module-ActionsColumnModule-69534d8c935ab5ae289f795956a7aa388feabea72655ae8bdea2c32a9549dc7b7bf024f120dd7cf34617edf8b64cf6c2df94c1a9111274c44d72cd00be088559",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/molecules/actions-column/actions-column.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ActionsColumnMolecule } from './actions-column.molecule';\n\n@NgModule({\n  declarations: [\n    ActionsColumnMolecule\n  ],\n  imports: [\n    CommonModule,\n    // Materials\n    MatTableModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n  exports: [\n    ActionsColumnMolecule\n  ]\n})\nexport class ActionsColumnModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ActionsColumnMolecule"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ActionsColumnMolecule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AutoLayoutModule",
            "id": "module-AutoLayoutModule-dd2398253f95d0b14bc19710b533ce17bdc25b3f79d6c87fe3eaea533cdb33805bf969e4e35f3e1f447077100c8addb7180927a23f90f737192f18383f9539bf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/frames/auto-layout/auto-layout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutoLayoutFrame } from './auto-layout.frame';\n\n\n\n@NgModule({\n  declarations: [\n    AutoLayoutFrame\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AutoLayoutFrame\n  ]\n})\nexport class AutoLayoutModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AutoLayoutFrame"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AutoLayoutFrame"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BackNavigatorModule",
            "id": "module-BackNavigatorModule-3a6b6fc05f117cea7a13109d7309055957fc828cc814dc1e33ef27874491cc0408c9cb661dd191f10bd02003fd5b544e3c3ff3b48003e8eb901c4973cd1ea4e6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/back-navigator/back-navigator.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { BackNavigatorOrganism } from './back-navigator.organism';\n\n@NgModule({\n  declarations: [\n    BackNavigatorOrganism\n  ],\n  imports: [\n    CommonModule,\n    // Material\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatMenuModule,\n  ],\n  exports: [\n    BackNavigatorOrganism\n  ]\n})\nexport class BackNavigatorModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BackNavigatorOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BackNavigatorOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BlankModule",
            "id": "module-BlankModule-1e7be3e4f8f65614f43918383788e9a6a6a39101499ad2be42c834bbaff1ebee6a3280a0579c21b6dc5eadae43182e2f36b8270605206b1cb07890a523914880",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/pages/blank/blank.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BlankPage } from './blank.page';\n\nconst routes: Routes = [{path: '', component: BlankPage}];\n\n@NgModule({\n  declarations: [BlankPage],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [BlankPage]\n})\nexport class BlankModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BlankPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BlankPage"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardModule",
            "id": "module-CardModule-adb964922dd89ae064b3af480b31174a9e3fc93575f1246aab3a68ba67dbb484fe3e1dfd973bd589a35a56784053a0eca1b593136c38b0b125876e8de5306010",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/frames/card/card.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { CardFrame } from './card.frame';\n\n\n\n@NgModule({\n  declarations: [\n    CardFrame\n  ],\n  imports: [\n    CommonModule,\n    // Material\n    MatCardModule,\n  ],\n  exports: [\n    CardFrame\n  ]\n})\nexport class CardModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardFrame"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardFrame"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CheckboxColumnModule",
            "id": "module-CheckboxColumnModule-faae962401a5e60b45940e61b2cff8fbd7448de081dea691f9459e6c02e5f3d554cb7c4260e85aaa2b428babc7f828db7f312cb3964b1dd7d5deb15d6ce02bab",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/molecules/checkbox-column/checkbox-column.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCheckboxModule, MAT_CHECKBOX_DEFAULT_OPTIONS, MatCheckboxDefaultOptions } from '@angular/material/checkbox';\n\nimport { CheckboxColumnMolecule } from './checkbox-column.molecule';\n\n\n\n@NgModule({\n  declarations: [\n    CheckboxColumnMolecule\n  ],\n  imports: [\n    CommonModule,\n    // Materials\n    MatTableModule,\n    MatCheckboxModule,\n  ],\n  exports: [\n    CheckboxColumnMolecule\n  ],\n  providers: [\n    {provide: MAT_CHECKBOX_DEFAULT_OPTIONS, useValue: { clickAction: 'noop' } as MatCheckboxDefaultOptions}\n  ]\n})\nexport class CheckboxColumnModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxColumnMolecule"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxColumnMolecule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChipsInputFieldModule",
            "id": "module-ChipsInputFieldModule-0e8a076682fe8619f158ae7a4100f05c03e87b64f91462326f2e26b78511095f167d89a875b3c772e5d5bcfbe98d1ee34c1f82346d387f5cd314af582d24eaaf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/molecules/chips-input-field/chips-input-field.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChipsInputFieldMolecule } from './chips-input-field.molecule';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    ChipsInputFieldMolecule\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    // Materials\n    MatChipsModule,\n    MatIconModule,\n    MatInputModule,\n  ],\n  exports: [\n    ChipsInputFieldMolecule\n  ]\n})\nexport class ChipsInputFieldModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChipsInputFieldMolecule"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ChipsInputFieldMolecule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DateInputSectionModule",
            "id": "module-DateInputSectionModule-75ddf6959d1fe2ff93934955929fac3d24ca225ac5ff9c4fe7cd30bc234ece5282949514b5eba8ed41ab999f5e2cc8df515ae9e4c86bc3029fca07d98ad878bd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/date-input-section/date-input-section.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDayjsDateModule, MAT_DAYJS_JP_PROVIDERS } from '@ng-atomic/common/utils';\n\nimport { DateInputSectionOrganism } from './date-input-section.organism';\n\n@NgModule({\n  declarations: [\n    DateInputSectionOrganism\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatDayjsDateModule,\n  ],\n  exports: [\n    DateInputSectionOrganism\n  ],\n  providers: [...MAT_DAYJS_JP_PROVIDERS],\n})\nexport class DateInputSectionModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DateInputSectionOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DateInputSectionOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EntranceModule",
            "id": "module-EntranceModule-7a14c14808310ee838de28c34d8d3fa0dcf9b2eb0dfc583c5fc9d27862ac26c58facf6fe2b19413b77279b6b54fc96e5557a2c820a65ff96ea51d6ee15f4d9c3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/templates/entrance/entrance.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionButtonsSectionModule } from '@ng-atomic/components/organisms/action-buttons-section';\nimport { HeadingModule } from '@ng-atomic/components/organisms/heading';\nimport { InputFieldSectionModule } from '@ng-atomic/components/organisms/input-field-section';\nimport { SocialLoginSectionModule } from '@ng-atomic/components/organisms/social-login-section';\nimport { AutoLayoutModule } from '@ng-atomic/components/frames/auto-layout';\nimport { CardModule } from '@ng-atomic/components/frames/card';\nimport { EntranceTemplate } from './entrance.template';\n\n\n@NgModule({\n  declarations: [\n    EntranceTemplate\n  ],\n  imports: [\n    CommonModule,\n    // Frames\n    AutoLayoutModule,\n    CardModule,\n    // Organisms\n    ActionButtonsSectionModule,\n    HeadingModule,\n    InputFieldSectionModule,\n    SocialLoginSectionModule,\n  ],\n  exports: [\n    EntranceTemplate\n  ]\n})\nexport class EntranceModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EntranceTemplate"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ActionButtonsSectionModule"
                        },
                        {
                            "name": "AutoLayoutModule"
                        },
                        {
                            "name": "CardModule"
                        },
                        {
                            "name": "HeadingModule"
                        },
                        {
                            "name": "InputFieldSectionModule"
                        },
                        {
                            "name": "SocialLoginSectionModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "EntranceTemplate"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeadingModule",
            "id": "module-HeadingModule-d18e3dd436b6fe486f17e4d3e96335424b236458a6e17d5614beea698c8027485b409d5b257a31734f661da6f1ef2adc2c34355329d064452ef9900f9a6e0284",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/heading/heading.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeadingOrganism } from './heading.organism';\n\n\n\n@NgModule({\n  declarations: [\n    HeadingOrganism\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    HeadingOrganism\n  ]\n})\nexport class HeadingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeadingOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeadingOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IndexModule",
            "id": "module-IndexModule-9e4907931db6dd330556e4a58412713e63db1a0223e7b392a1a9a19c57b3c631d921ad464265a2dcd9d4090ee8726d4ccbc735ca92e7a7aaa31e5cb7f586bbf5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/pages/_index/index.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IndexPage } from './index.page';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: IndexPage,\n\t\t// loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)\n\t}\n];\n\n@NgModule({\n  declarations: [IndexPage],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [IndexPage]\n})\nexport class IndexModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IndexPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "IndexPage"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputFieldSectionModule",
            "id": "module-InputFieldSectionModule-3cde84d1d76361159ceb8759d6de6c28f66a477b830cf8a408c72fcc1a77e54d941ac141d4fab82311c91612ea6dbd6249df80564dac303029f140aa4a148d46",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/input-field-section/input-field-section.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { InputFieldSectionOrganism } from './input-field-section.organism';\n\n@NgModule({\n  declarations: [\n    InputFieldSectionOrganism\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    // Material\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  exports: [\n    InputFieldSectionOrganism\n  ]\n})\nexport class InputFieldSectionModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputFieldSectionOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputFieldSectionOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LineUpModule",
            "id": "module-LineUpModule-f0aa6445a1c6b892500169e753985f737e74eeacd212adea79f7fa1f302e520ea048ca1b8f1093cf275b59cc59ba03b298064fdd905ed71e39f5df12ee0365e3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/frames/line-up/line-up.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { LineUpFrame } from './line-up.frame';\n\n\n@NgModule({\n  declarations: [LineUpFrame],\n  imports: [\n    CommonModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [LineUpFrame]\n})\nexport class LineUpModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LineUpFrame"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LineUpFrame"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoadingModule",
            "id": "module-LoadingModule-3dc98f74d5363dcdcc048417b5d30321c6f3c58fc6ee965c7d9b030aa2236641393d1a19ed57141e4a3143dd4374762ba2c39b040b7d6b2228906caed055c6ba",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/templates/loading/loading.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { LoadingTemplate } from './loading.template';\n\n\n@NgModule({\n  declarations: [\n    LoadingTemplate\n  ],\n  imports: [\n    CommonModule,\n    // Materials\n    MatProgressSpinnerModule,\n  ],\n  exports: [\n    LoadingTemplate\n  ]\n})\nexport class LoadingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoadingTemplate"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoadingTemplate"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MenuModule",
            "id": "module-MenuModule-0e64487e5003ad0b7528bd01d78d366839c6729f3fc6435bbd3350021c06ef9d21b6db6eac006a53e900cb006282c3d88977a5a94ce7ca63df35d1a68a41a8c2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/menu/menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuOrganism } from './menu.organism';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [MenuOrganism],\n  imports: [\n    CommonModule,\n    MatListModule,\n    MatIconModule\n  ],\n  exports: [MenuOrganism]\n})\nexport class MenuModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MenuOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MenuOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OverlayModule",
            "id": "module-OverlayModule-0bf0010ed82b151286fd044560fc26514c2c7eb176b8ff8e05e968adc8bff51f1f5fa9ddb05d8d988f556d3c9fb2524251fa3ba68b0497c0c882a2534c3eeb30",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/frames/overlay/overlay.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { OverlayFrame } from './overlay.frame';\n\n@NgModule({\n  declarations: [OverlayFrame],\n  imports: [\n    CommonModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    OverlayFrame\n  ]\n})\nexport class OverlayModule { }\n\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OverlayFrame"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OverlayFrame"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaginatorModule",
            "id": "module-PaginatorModule-3bc604a59e478976e15871bb2be7c0a61056578205b16af9453390205f5cc35f4bb250c37c175c7a7766d92361adf00f89f7568937faa62459c0e980f338de88",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/paginator/paginator.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { AutoLayoutModule } from '@ng-atomic/components/frames/auto-layout';\nimport { ChipsInputFieldModule } from '@ng-atomic/components/molecules/chips-input-field';\n\nimport { PaginatorOrganism } from './paginator.organism';\n\n@NgModule({\n  declarations: [\n    PaginatorOrganism\n  ],\n  imports: [\n    CommonModule,\n    // Materials\n    MatPaginatorModule,\n    // Frames\n    AutoLayoutModule,\n    // Molecules\n    ChipsInputFieldModule,\n  ],\n  exports: [\n    PaginatorOrganism\n  ]\n})\nexport class PaginatorModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PaginatorOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AutoLayoutModule"
                        },
                        {
                            "name": "ChipsInputFieldModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PaginatorOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ScrollModule",
            "id": "module-ScrollModule-d491f8e01e23d493afaf487bfddcefab0252c5fbde80c6c1651a58fa09f80b36c7b6772b62e5f15118c0bc0dba7212ff89ad9bba570accc5774005ecc4f00e0e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/frames/scroll/scroll.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IosSafariScrollBuggyfillModule } from '@ng-atomic/common/directives';\nimport { ScrollFrame } from './scroll.frame';\n\n\n@NgModule({\n  declarations: [\n    ScrollFrame\n  ],\n  imports: [\n    CommonModule,\n    IosSafariScrollBuggyfillModule,\n  ],\n  exports: [\n    ScrollFrame\n  ]\n})\nexport class ScrollModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ScrollFrame"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ScrollFrame"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectInputFieldModule",
            "id": "module-SelectInputFieldModule-c80e340b8febd5b1f1cfd347f81ad30fb5fedcd81ed830f1020bd9aa091b248c1c1a4acbd4b791958b3e9da5d2fdbc5dd395b29908418b83d4fc1e5f1adbb8d1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/molecules/select-input-field/select-input-field.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { SelectInputFieldMolecule } from './select-input-field.molecule';\n\n\n\n@NgModule({\n  declarations: [\n    SelectInputFieldMolecule\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    // Materials\n    MatSelectModule,\n  ],\n  exports: [\n    SelectInputFieldMolecule\n  ]\n})\nexport class SelectInputFieldModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SelectInputFieldMolecule"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SelectInputFieldMolecule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectInputSectionModule",
            "id": "module-SelectInputSectionModule-5b7ef69fb83b01271be574f759302b778305911aca3da48efaa7bf3ed0bc7a81b764239e5e46469407d4c7ab13769419a392a3f1e508e871e201928b2ac15ee9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/select-input-section/select-input-section.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectInputSectionOrganism } from './select-input-section.organism';\n\nimport { SelectInputFieldModule } from '@ng-atomic/components/molecules/select-input-field';\n\n@NgModule({\n  declarations: [\n    SelectInputSectionOrganism\n  ],\n  imports: [\n    CommonModule,\n    // Molecules\n    SelectInputFieldModule,\n  ],\n  exports: [\n    SelectInputSectionOrganism\n  ]\n})\nexport class SelectInputSectionModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SelectInputSectionOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SelectInputFieldModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SelectInputSectionOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SmartColumnModule",
            "id": "module-SmartColumnModule-1e12ca85f661bcc06a6d54cef0536a09ff440b5e26448b596ae7eb10a1d2ab2af7494c4dd3910aa6ecc5aae8014e5de2a050d6861469cf88a4073dae16c40c6a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/molecules/smart-column/smart-column.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { SmartColumnMolecule } from './smart-column.molecule';\nimport { SmartExpModule } from '@ng-atomic/common/pipes';\n\n@NgModule({\n  declarations: [\n    SmartColumnMolecule,\n  ],\n  imports: [\n    CommonModule,\n    // Pipes\n    SmartExpModule,\n    // Materials\n    MatTableModule,\n  ],\n  exports: [\n    SmartColumnMolecule\n  ]\n})\nexport class SmartColumnModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SmartColumnMolecule"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SmartColumnMolecule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SmartCrudModule",
            "id": "module-SmartCrudModule-4bc12ef4801cb9f6b96fce62ce09d7732fbab6cc8b11a5567bad8b6a6b045df077b38c1b9edfc289a3aff301df7864b3aaa7aec97b550612cbee124b84d28e90",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/templates/smart-crud/smart-crud.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ScrollModule } from '@ng-atomic/components/frames/scroll';\nimport { AutoLayoutModule } from '@ng-atomic/components/frames/auto-layout';\nimport { ActionButtonsSectionModule } from '@ng-atomic/components/organisms/action-buttons-section';\nimport { BackNavigatorModule } from '@ng-atomic/components/organisms/back-navigator';\nimport { InputFieldSectionModule } from '@ng-atomic/components/organisms/input-field-section';\nimport { DateInputSectionModule } from '@ng-atomic/components/organisms/date-input-section';\nimport { SelectInputSectionModule } from '@ng-atomic/components/organisms/select-input-section';\nimport { SmartFieldModule } from '@ng-atomic/common/pipes';\nimport { DomainModule } from '@ng-atomic/common/pipes';\n\nimport { SmartCrudTemplate } from './smart-crud.template';\n\n\n@NgModule({\n  declarations: [\n    SmartCrudTemplate\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    // Pipes\n    DomainModule,\n    SmartFieldModule,\n    // Frames\n    AutoLayoutModule,\n    ScrollModule,\n    // Organisms\n    ActionButtonsSectionModule,\n    BackNavigatorModule,\n    DateInputSectionModule,\n    InputFieldSectionModule,\n    SelectInputSectionModule,\n  ],\n  exports: [\n    SmartCrudTemplate\n  ]\n})\nexport class SmartCrudModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SmartCrudTemplate"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ActionButtonsSectionModule"
                        },
                        {
                            "name": "AutoLayoutModule"
                        },
                        {
                            "name": "BackNavigatorModule"
                        },
                        {
                            "name": "DateInputSectionModule"
                        },
                        {
                            "name": "InputFieldSectionModule"
                        },
                        {
                            "name": "ScrollModule"
                        },
                        {
                            "name": "SelectInputSectionModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SmartCrudTemplate"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SmartIndexModule",
            "id": "module-SmartIndexModule-2d26172ba698978dffb8f7134fece2fad41d1fed169e1f6dc7d73bad703b01e5d9a313a092c243481f55a32e4e7e09a16d0668b70fe42acd5ee26355efbc45c1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/templates/smart-index/smart-index.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutoLayoutModule } from '@ng-atomic/components/frames/auto-layout';\nimport { ScrollModule } from '@ng-atomic/components/frames/scroll';\nimport { SmartTableModule } from '@ng-atomic/components/organisms/smart-table';\nimport { BackNavigatorModule } from '@ng-atomic/components/organisms/back-navigator';\nimport { PaginatorModule } from '@ng-atomic/components/organisms/paginator';\n\nimport { SmartIndexTemplate } from './smart-index.template';\n\n\n\n@NgModule({\n  declarations: [\n    SmartIndexTemplate\n  ],\n  imports: [\n    CommonModule,\n    // Frames\n    AutoLayoutModule,\n    ScrollModule,\n    // Organisms\n    PaginatorModule,\n    SmartTableModule,\n    BackNavigatorModule,\n  ],\n  exports: [\n    SmartIndexTemplate\n  ]\n})\nexport class SmartIndexModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SmartIndexTemplate"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AutoLayoutModule"
                        },
                        {
                            "name": "BackNavigatorModule"
                        },
                        {
                            "name": "PaginatorModule"
                        },
                        {
                            "name": "ScrollModule"
                        },
                        {
                            "name": "SmartTableModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SmartIndexTemplate"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SmartTableModule",
            "id": "module-SmartTableModule-808cba300f91cce0b37763ff67a9193f9d73193fe3fe8c45dedf238f0a3be768932ae90766e974e4553ed6f101f446dd39821210f9ba4978a67556e1181588b6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/smart-table/smart-table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ActionsColumnModule } from '@ng-atomic/components/molecules/actions-column';\nimport { CheckboxColumnModule } from '@ng-atomic/components/molecules/checkbox-column';\nimport { SmartColumnModule } from '@ng-atomic/components/molecules/smart-column';\nimport { DomainModule } from '@ng-atomic/common/pipes';\n\nimport { SmartTableOrganism } from './smart-table.organism';\n\n@NgModule({\n  declarations: [\n    SmartTableOrganism,\n  ],\n  imports: [\n    CommonModule,\n    // Pipes\n    DomainModule,\n    // Material\n    MatTableModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    // Molecules\n    ActionsColumnModule,\n    CheckboxColumnModule,\n    SmartColumnModule,\n  ],\n  exports: [\n    SmartTableOrganism\n  ]\n})\nexport class SmartTableModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SmartTableOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ActionsColumnModule"
                        },
                        {
                            "name": "CheckboxColumnModule"
                        },
                        {
                            "name": "SmartColumnModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SmartTableOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SocialLoginSectionModule",
            "id": "module-SocialLoginSectionModule-3948afda3e44f9d5d1c5cea10ac12e835340d4cd75897a69a577ffb9c6fb9cbfe196098066f9d8dc7be53e962a6b4f62c3f3a088c6c22cae7de04315ead7dea9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/social-login-section/social-login-section.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SocialLoginSectionOrganism } from './social-login-section.organism';\n\n\n\n@NgModule({\n  declarations: [\n    SocialLoginSectionOrganism\n  ],\n  imports: [\n    CommonModule,\n    // Material\n    MatButtonModule,\n  ],\n  exports: [\n    SocialLoginSectionOrganism\n  ]\n})\nexport class SocialLoginSectionModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SocialLoginSectionOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SocialLoginSectionOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TopNavigatorModule",
            "id": "module-TopNavigatorModule-ffd92c3a015e8fe856843c2583918e67306e5de7b727489453672b0a257c2fef4c5ed663fbd5f8cf0ab7954e690e720311ef29d24ff653f8fcd5977c3c1eb5d1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/organisms/top-navigator/top-navigator.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopNavigatorOrganism } from './top-navigator.organism';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@NgModule({\n  declarations: [\n    TopNavigatorOrganism\n  ],\n  imports: [\n    CommonModule,\n    // Material\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatMenuModule,\n  ],\n  exports: [\n    TopNavigatorOrganism\n  ]\n})\nexport class TopNavigatorModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TopNavigatorOrganism"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TopNavigatorOrganism"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "_fromResize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/line-up/line-up.frame.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(el: ElementRef) => fromResize(el.nativeElement)\n  .pipe(map(({contentRect}: {contentRect: {width: number}}) => contentRect?.width ?? 0))\n  .pipe(distinctUntilChanged())"
            },
            {
                "name": "Actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/templates/smart-index/smart-index.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "toActions([\n  'actionItemClick',\n  'backButtonClick',\n  'checkboxClick',\n  'pageChange',\n])"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/actions-column/actions-column.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/select-input-field/select-input-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/smart-column/smart-column.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/auto-layout/auto-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/line-up/line-up.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/overlay/overlay.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/scroll/scroll.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/back-navigator/back-navigator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  backButtonClick: action('backButtonClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/date-input-section/date-input-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/input-field-section/input-field-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  backButtonClick: action('backButtonClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/paginator/paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  pageChange: action('pageChange'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/select-input-section/select-input-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  pageChange: action('pageChange'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/smart-table/smart-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  pageChange: action('pageChange'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/social-login-section/social-login-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  signInWithGoogleButtonClick: action('signInWithGoogleButtonClick'),\n}"
            },
            {
                "name": "ACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/top-navigator/top-navigator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  menuItemClick: action('menuItemClick'),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/actions-column/actions-column.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/select-input-field/select-input-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/smart-column/smart-column.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/auto-layout/auto-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/line-up/line-up.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/overlay/overlay.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/scroll/scroll.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/pages/blank/blank.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      BlankModule,\n    ]\n  }\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/back-navigator/back-navigator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/date-input-section/date-input-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/heading/heading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/input-field-section/input-field-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/paginator/paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/select-input-section/select-input-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/smart-table/smart-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/social-login-section/social-login-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/top-navigator/top-navigator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/templates/entrance/entrance.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      EntranceModule,\n    ]\n  }\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/templates/smart-index/smart-index.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/templates/smart-crud/smart-crud.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/templates/loading/loading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  template: `<templates-loading></templates-loading>`,\n  props: {},\n  moduleMetadata: {\n    imports: [LoadingModule]\n  }\n})"
            },
            {
                "name": "LINE_UP_ANIMATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/line-up/line-up.animations.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  visibleHiddenAnimation,\n  routeAnimation,\n]"
            },
            {
                "name": "platform",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/main.elements.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PlatformRef"
            },
            {
                "name": "routeAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/line-up/line-up.animations.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('pageChange', [\n  state('Next', style({\n    position: 'relative',\n    width: '100%',\n  })),\n  state('NextWithMainPage', style({\n    position: 'relative',\n    width: '100%',\n  })),\n  state('Blank', style({\n    position: 'relative',\n    display: 'none',\n  })),\n  transition('Blank => Next', [\n    query(':enter', [animate('0.5s')], { optional: true }),\n    sequence([\n      style({ display: 'inherit', width: '100%' }),\n      animate('0.5s'),\n    ]),\n  ]),\n  transition('Blank => NextWithMainPage', [\n    query(':enter', [animate('0.5s')], { optional: true }),\n    sequence([\n      style({ display: 'inherit', width: '100%' }),\n      animate('0.5s'),\n    ]),\n  ]),\n  transition('Next => Blank', group([\n    query(':leave', animate('0.5s', style({width: '100%'})), { optional: true }),\n    sequence([\n      style({position: 'absolute', display: 'block', left: '0%'}),\n      animate('0.5s', style({left: '100%'})),\n    ]),\n  ])),\n  transition('NextWithMainPage => Blank', group([\n    query(':leave', animate('0.5s', style({width: '100%'})), { optional: true }),\n    sequence([\n      style({position: 'absolute', display: 'block', left: '100%'}),\n      animate('0.5s', style({})),\n    ]),\n  ])),\n])"
            },
            {
                "name": "slideInAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/overlay/overlay.animations.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('routeAnimations', [\n  transition('IndexPage => NextPage', [\n    query(':enter', [\n      style({\n        position: 'absolute',\n        top: '0px',\n        left: '0px'\n      })\n    ]),\n    query(':enter', [style({ left: '100%' })]),\n    query(':enter', [animate('300ms ease-out', style({ left: '0%' }))]),\n    query(':enter', animateChild()),\n  ]),\n\n  transition('NextPage => IndexPage', [\n      query(':leave', [\n        style({\n          position: 'absolute',\n          top: '0px',\n          left: '0px'\n        })\n      ]),\n      query(':leave', [style({ left: '0%' })]),\n      query(':leave', [animate('300ms ease-in', style({ left: '100%' }))]),\n      query(':leave', animateChild()),\n  ])\n\n])"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/actions-column/actions-column.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      ActionsColumnModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      ChipsInputFieldModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/select-input-field/select-input-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SelectInputFieldModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/smart-column/smart-column.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SmartColumnModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      CheckboxColumnModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/auto-layout/auto-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      AutoLayoutModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/line-up/line-up.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      LineUpModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/overlay/overlay.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      OverlayModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/scroll/scroll.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      ScrollModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      CardModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      ActionButtonsSectionModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/back-navigator/back-navigator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      BackNavigatorModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/date-input-section/date-input-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      DateInputSectionModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/heading/heading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template: `<organisms-heading [level]=\"level\"><span>TEST2</span></organisms-heading>`,\n  props: {...args},\n  moduleMetadata: {\n    imports: [HeadingModule]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/input-field-section/input-field-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      InputFieldSectionModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      MenuModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/paginator/paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      PaginatorModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/select-input-section/select-input-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SelectInputSectionModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/smart-table/smart-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SmartTableModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/social-login-section/social-login-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SocialLoginSectionModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/organisms/top-navigator/top-navigator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      TopNavigatorModule,\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/templates/smart-index/smart-index.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: { ...args, ...Actions },\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SmartIndexModule\n    ]\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/templates/smart-crud/smart-crud.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {\n    ...args,\n    form: new FormGroup({\n      id: new FormControl(1),\n    }),\n  },\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SmartCrudModule,\n    ]\n  }\n})"
            },
            {
                "name": "toActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/templates/smart-index/smart-index.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(names: string[]) => names.reduce((p, name) => ({\n  ...p, [name]: action(name),\n}), {})"
            },
            {
                "name": "visibleHiddenAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/frames/line-up/line-up.animations.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('visibleHidden', [\n  state('visible', style({\n    width: '100%',\n  })),\n  state('hidden', style({\n    display: 'none',\n    width: '0%',\n  })),\n  transition('visible => hidden', [\n    animate('0.5s', style({ width: '0%' })),\n    style({display: 'none'}),\n  ]),\n  transition('hidden => visible', [\n    sequence([\n      style({ display: 'inherit' }),\n      animate('0.5s', style({ width: '100%' })),\n    ]),\n  ]),\n])"
            }
        ],
        "functions": [
            {
                "name": "fromResize",
                "file": "libs/components/frames/line-up/resize-observer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "elements",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "returnType": "Observable<ResizeObserverEntry>",
                "jsdoctags": [
                    {
                        "name": "elements",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/molecules/actions-column/actions-column.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/molecules/select-input-field/select-input-field.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/molecules/smart-column/smart-column.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/frames/auto-layout/auto-layout.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/frames/line-up/line-up.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/frames/overlay/overlay.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/frames/scroll/scroll.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/frames/card/card.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/organisms/back-navigator/back-navigator.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/organisms/date-input-section/date-input-section.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "TEST1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/organisms/input-field-section/input-field-section.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "MENU_1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "MENU_2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/organisms/menu/menu.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "MENU_1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "MENU_2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/organisms/paginator/paginator.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "MENU_1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "MENU_2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/organisms/select-input-section/select-input-section.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "MENU_1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "MENU_2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/organisms/smart-table/smart-table.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "MENU_1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "MENU_2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/organisms/social-login-section/social-login-section.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "ACTION_1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ACTION_2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/organisms/top-navigator/top-navigator.stories.ts"
            },
            {
                "name": "ActionId",
                "childs": [
                    {
                        "name": "CREATE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "EDIT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CALL",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/templates/smart-index/smart-index.stories.ts"
            }
        ],
        "groupedVariables": {
            "libs/components/frames/line-up/line-up.frame.ts": [
                {
                    "name": "_fromResize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/line-up/line-up.frame.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(el: ElementRef) => fromResize(el.nativeElement)\n  .pipe(map(({contentRect}: {contentRect: {width: number}}) => contentRect?.width ?? 0))\n  .pipe(distinctUntilChanged())"
                }
            ],
            "libs/components/templates/smart-index/smart-index.stories.ts": [
                {
                    "name": "Actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/templates/smart-index/smart-index.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "toActions([\n  'actionItemClick',\n  'backButtonClick',\n  'checkboxClick',\n  'pageChange',\n])"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/templates/smart-index/smart-index.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/templates/smart-index/smart-index.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: { ...args, ...Actions },\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SmartIndexModule\n    ]\n  }\n})"
                },
                {
                    "name": "toActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/templates/smart-index/smart-index.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(names: string[]) => names.reduce((p, name) => ({\n  ...p, [name]: action(name),\n}), {})"
                }
            ],
            "libs/components/molecules/actions-column/actions-column.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/actions-column/actions-column.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/actions-column/actions-column.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/actions-column/actions-column.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      ActionsColumnModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/molecules/chips-input-field/chips-input-field.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      ChipsInputFieldModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/molecules/select-input-field/select-input-field.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/select-input-field/select-input-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/select-input-field/select-input-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/select-input-field/select-input-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SelectInputFieldModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/molecules/smart-column/smart-column.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/smart-column/smart-column.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/smart-column/smart-column.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/smart-column/smart-column.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SmartColumnModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/molecules/checkbox-column/checkbox-column.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      CheckboxColumnModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/frames/auto-layout/auto-layout.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/auto-layout/auto-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/auto-layout/auto-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/auto-layout/auto-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      AutoLayoutModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/frames/line-up/line-up.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/line-up/line-up.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/line-up/line-up.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/line-up/line-up.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      LineUpModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/frames/overlay/overlay.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/overlay/overlay.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/overlay/overlay.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/overlay/overlay.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      OverlayModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/frames/scroll/scroll.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/scroll/scroll.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/scroll/scroll.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/scroll/scroll.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      ScrollModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/frames/card/card.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      CardModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      ActionButtonsSectionModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/back-navigator/back-navigator.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/back-navigator/back-navigator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  backButtonClick: action('backButtonClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/back-navigator/back-navigator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/back-navigator/back-navigator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      BackNavigatorModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/date-input-section/date-input-section.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/date-input-section/date-input-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/date-input-section/date-input-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/date-input-section/date-input-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      DateInputSectionModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/input-field-section/input-field-section.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/input-field-section/input-field-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  backButtonClick: action('backButtonClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/input-field-section/input-field-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/input-field-section/input-field-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      InputFieldSectionModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/menu/menu.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actionItemClick: action('actionItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      MenuModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/paginator/paginator.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/paginator/paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  pageChange: action('pageChange'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/paginator/paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/paginator/paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      PaginatorModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/select-input-section/select-input-section.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/select-input-section/select-input-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  pageChange: action('pageChange'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/select-input-section/select-input-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/select-input-section/select-input-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SelectInputSectionModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/smart-table/smart-table.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/smart-table/smart-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  pageChange: action('pageChange'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/smart-table/smart-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/smart-table/smart-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SmartTableModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/social-login-section/social-login-section.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/social-login-section/social-login-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  signInWithGoogleButtonClick: action('signInWithGoogleButtonClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/social-login-section/social-login-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/social-login-section/social-login-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SocialLoginSectionModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/top-navigator/top-navigator.stories.ts": [
                {
                    "name": "ACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/top-navigator/top-navigator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  menuItemClick: action('menuItemClick'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/top-navigator/top-navigator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/top-navigator/top-navigator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {...args, ...ACTIONS},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      TopNavigatorModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/pages/blank/blank.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/pages/blank/blank.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      BlankModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/organisms/heading/heading.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/heading/heading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/organisms/heading/heading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template: `<organisms-heading [level]=\"level\"><span>TEST2</span></organisms-heading>`,\n  props: {...args},\n  moduleMetadata: {\n    imports: [HeadingModule]\n  }\n})"
                }
            ],
            "libs/components/templates/entrance/entrance.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/templates/entrance/entrance.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      EntranceModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/templates/smart-crud/smart-crud.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/templates/smart-crud/smart-crud.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/templates/smart-crud/smart-crud.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {\n    ...args,\n    form: new FormGroup({\n      id: new FormControl(1),\n    }),\n  },\n  moduleMetadata: {\n    imports: [\n      BrowserAnimationsModule,\n      SmartCrudModule,\n    ]\n  }\n})"
                }
            ],
            "libs/components/templates/loading/loading.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/templates/loading/loading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  template: `<templates-loading></templates-loading>`,\n  props: {},\n  moduleMetadata: {\n    imports: [LoadingModule]\n  }\n})"
                }
            ],
            "libs/components/frames/line-up/line-up.animations.ts": [
                {
                    "name": "LINE_UP_ANIMATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/line-up/line-up.animations.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  visibleHiddenAnimation,\n  routeAnimation,\n]"
                },
                {
                    "name": "routeAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/line-up/line-up.animations.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('pageChange', [\n  state('Next', style({\n    position: 'relative',\n    width: '100%',\n  })),\n  state('NextWithMainPage', style({\n    position: 'relative',\n    width: '100%',\n  })),\n  state('Blank', style({\n    position: 'relative',\n    display: 'none',\n  })),\n  transition('Blank => Next', [\n    query(':enter', [animate('0.5s')], { optional: true }),\n    sequence([\n      style({ display: 'inherit', width: '100%' }),\n      animate('0.5s'),\n    ]),\n  ]),\n  transition('Blank => NextWithMainPage', [\n    query(':enter', [animate('0.5s')], { optional: true }),\n    sequence([\n      style({ display: 'inherit', width: '100%' }),\n      animate('0.5s'),\n    ]),\n  ]),\n  transition('Next => Blank', group([\n    query(':leave', animate('0.5s', style({width: '100%'})), { optional: true }),\n    sequence([\n      style({position: 'absolute', display: 'block', left: '0%'}),\n      animate('0.5s', style({left: '100%'})),\n    ]),\n  ])),\n  transition('NextWithMainPage => Blank', group([\n    query(':leave', animate('0.5s', style({width: '100%'})), { optional: true }),\n    sequence([\n      style({position: 'absolute', display: 'block', left: '100%'}),\n      animate('0.5s', style({})),\n    ]),\n  ])),\n])"
                },
                {
                    "name": "visibleHiddenAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/line-up/line-up.animations.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('visibleHidden', [\n  state('visible', style({\n    width: '100%',\n  })),\n  state('hidden', style({\n    display: 'none',\n    width: '0%',\n  })),\n  transition('visible => hidden', [\n    animate('0.5s', style({ width: '0%' })),\n    style({display: 'none'}),\n  ]),\n  transition('hidden => visible', [\n    sequence([\n      style({ display: 'inherit' }),\n      animate('0.5s', style({ width: '100%' })),\n    ]),\n  ]),\n])"
                }
            ],
            "libs/components/main.elements.ts": [
                {
                    "name": "platform",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/main.elements.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PlatformRef"
                }
            ],
            "libs/components/frames/overlay/overlay.animations.ts": [
                {
                    "name": "slideInAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/frames/overlay/overlay.animations.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('routeAnimations', [\n  transition('IndexPage => NextPage', [\n    query(':enter', [\n      style({\n        position: 'absolute',\n        top: '0px',\n        left: '0px'\n      })\n    ]),\n    query(':enter', [style({ left: '100%' })]),\n    query(':enter', [animate('300ms ease-out', style({ left: '0%' }))]),\n    query(':enter', animateChild()),\n  ]),\n\n  transition('NextPage => IndexPage', [\n      query(':leave', [\n        style({\n          position: 'absolute',\n          top: '0px',\n          left: '0px'\n        })\n      ]),\n      query(':leave', [style({ left: '0%' })]),\n      query(':leave', [animate('300ms ease-in', style({ left: '100%' }))]),\n      query(':leave', animateChild()),\n  ])\n\n])"
                }
            ]
        },
        "groupedFunctions": {
            "libs/components/frames/line-up/resize-observer.ts": [
                {
                    "name": "fromResize",
                    "file": "libs/components/frames/line-up/resize-observer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "elements",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "returnType": "Observable<ResizeObserverEntry>",
                    "jsdoctags": [
                        {
                            "name": "elements",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "libs/components/molecules/actions-column/actions-column.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/molecules/actions-column/actions-column.stories.ts"
                }
            ],
            "libs/components/molecules/chips-input-field/chips-input-field.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts"
                }
            ],
            "libs/components/molecules/select-input-field/select-input-field.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/molecules/select-input-field/select-input-field.stories.ts"
                }
            ],
            "libs/components/molecules/smart-column/smart-column.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/molecules/smart-column/smart-column.stories.ts"
                }
            ],
            "libs/components/molecules/checkbox-column/checkbox-column.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts"
                }
            ],
            "libs/components/frames/auto-layout/auto-layout.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/frames/auto-layout/auto-layout.stories.ts"
                }
            ],
            "libs/components/frames/line-up/line-up.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/frames/line-up/line-up.stories.ts"
                }
            ],
            "libs/components/frames/overlay/overlay.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/frames/overlay/overlay.stories.ts"
                }
            ],
            "libs/components/frames/scroll/scroll.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/frames/scroll/scroll.stories.ts"
                }
            ],
            "libs/components/frames/card/card.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/frames/card/card.stories.ts"
                }
            ],
            "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts"
                }
            ],
            "libs/components/organisms/back-navigator/back-navigator.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/organisms/back-navigator/back-navigator.stories.ts"
                }
            ],
            "libs/components/organisms/date-input-section/date-input-section.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/organisms/date-input-section/date-input-section.stories.ts"
                }
            ],
            "libs/components/organisms/input-field-section/input-field-section.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "TEST1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/organisms/input-field-section/input-field-section.stories.ts"
                }
            ],
            "libs/components/organisms/menu/menu.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "MENU_1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "MENU_2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/organisms/menu/menu.stories.ts"
                }
            ],
            "libs/components/organisms/paginator/paginator.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "MENU_1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "MENU_2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/organisms/paginator/paginator.stories.ts"
                }
            ],
            "libs/components/organisms/select-input-section/select-input-section.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "MENU_1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "MENU_2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/organisms/select-input-section/select-input-section.stories.ts"
                }
            ],
            "libs/components/organisms/smart-table/smart-table.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "MENU_1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "MENU_2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/organisms/smart-table/smart-table.stories.ts"
                }
            ],
            "libs/components/organisms/social-login-section/social-login-section.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "MENU_1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "MENU_2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/organisms/social-login-section/social-login-section.stories.ts"
                }
            ],
            "libs/components/organisms/top-navigator/top-navigator.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "ACTION_1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ACTION_2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/organisms/top-navigator/top-navigator.stories.ts"
                }
            ],
            "libs/components/templates/smart-index/smart-index.stories.ts": [
                {
                    "name": "ActionId",
                    "childs": [
                        {
                            "name": "CREATE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "EDIT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CALL",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/templates/smart-index/smart-index.stories.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "libs/components/frames/auto-layout/auto-layout.frame.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutoLayoutFrame",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/auto-layout/auto-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/auto-layout/auto-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/auto-layout/auto-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/card/card.frame.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardFrame",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/line-up.animations.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LINE_UP_ANIMATIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/line-up.animations.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routeAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/line-up.animations.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "visibleHiddenAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/line-up.frame.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineUpFrame",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/line-up.frame.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LineUpService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/line-up.frame.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_fromResize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/line-up.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/line-up.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/line-up.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/resize-observer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DOMRectReadOnly",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/resize-observer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResizeObserverEntry",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/line-up/resize-observer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fromResize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/overlay/overlay.animations.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slideInAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/overlay/overlay.frame.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverlayFrame",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/overlay/overlay.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/overlay/overlay.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/overlay/overlay.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/scroll/scroll.frame.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScrollFrame",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/scroll/scroll.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/scroll/scroll.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/frames/scroll/scroll.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/main.elements.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "platform",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/actions-column/actions-column.molecule.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionsColumnMolecule",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/actions-column/actions-column.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/actions-column/actions-column.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/actions-column/actions-column.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/checkbox-column/checkbox-column.molecule.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxColumnMolecule",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/checkbox-column/checkbox-column.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/chips-input-field/chips-input-field.molecule.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipsInputFieldMolecule",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/chips-input-field/chips-input-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/select-input-field/select-input-field.molecule.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputFieldMolecule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/select-input-field/select-input-field.molecule.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Option",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/select-input-field/select-input-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/select-input-field/select-input-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/select-input-field/select-input-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/smart-column/smart-column.molecule.ts",
                "type": "component",
                "linktype": "component",
                "name": "SmartColumnMolecule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/smart-column/smart-column.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/smart-column/smart-column.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/molecules/smart-column/smart-column.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/action-buttons-section/action-buttons-section.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionButtonsSectionOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/action-buttons-section/action-buttons-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/back-navigator/back-navigator.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "BackNavigatorOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/back-navigator/back-navigator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/back-navigator/back-navigator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/back-navigator/back-navigator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/date-input-section/date-input-section.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateInputSectionOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/date-input-section/date-input-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/date-input-section/date-input-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/date-input-section/date-input-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/heading/heading.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeadingOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/heading/heading.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/heading/heading.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/input-field-section/input-field-section.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputFieldSectionOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/input-field-section/input-field-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/input-field-section/input-field-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/input-field-section/input-field-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/menu/menu.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/paginator/paginator.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/paginator/paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/paginator/paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/paginator/paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/select-input-section/select-input-section.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputSectionOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/select-input-section/select-input-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/select-input-section/select-input-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/select-input-section/select-input-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/smart-table/smart-table.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "SmartTableOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/smart-table/smart-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/smart-table/smart-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/smart-table/smart-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/social-login-section/social-login-section.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialLoginSectionOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/social-login-section/social-login-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/social-login-section/social-login-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/social-login-section/social-login-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/top-navigator/top-navigator.organism.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopNavigatorOrganism",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/top-navigator/top-navigator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/top-navigator/top-navigator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/organisms/top-navigator/top-navigator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/pages/_index/index.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "IndexPage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/pages/blank/blank.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlankPage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/pages/blank/blank.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/entrance/entrance.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/entrance/entrance.template.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntranceTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/loading/loading.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/loading/loading.template.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/smart-crud/smart-crud.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/smart-crud/smart-crud.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/smart-crud/smart-crud.template.ts",
                "type": "component",
                "linktype": "component",
                "name": "SmartCrudTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/smart-index/smart-index.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/smart-index/smart-index.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/smart-index/smart-index.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/smart-index/smart-index.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/templates/smart-index/smart-index.template.ts",
                "type": "component",
                "linktype": "component",
                "name": "SmartIndexTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            }
        ]
    }
}