name: Production
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - run: npx nx build executors
      - run: npx nx run-many --target=build --projects=common,components,elements,executors,schematics,storybook --parallel=2
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  release:
    name: Release
    runs-on: ubuntu-18.04
    needs: build
    outputs:
      is_released: ${{ steps.result.outputs.is_released }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Download production artifacts
        uses: actions/download-artifact@v2
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      - id: result
        run: echo "::set-output name=is_released::$(.github/scripts/is-released)"
      - id: get_version
        run: echo "::set-output name=version::$(git describe --tags --abbrev=0 --always)"
  publish:
    name: Publish
    runs-on: ubuntu-18.04
    needs: release
    if: needs.release.outputs.is_released == 'true'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Download production artifacts
        uses: actions/download-artifact@v2
      - name: Set Package Version to Environment
        run: echo PACKAGE_VERSION=${{ needs.release.outputs.version }} >> $GITHUB_ENV
      - run: npm run scripts:set-package-versions ${{ needs.release.outputs.version }}
      - run: npm run publish:all
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
